{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEO,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK;AAAA,SAAI,IAAIC,OAAJ,CAAa,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAClEN,IAAAA,0DAAA,CAAWG,KAAX,EAAkBF,2CAAlB,EAA0B,UAACO,GAAD,EAAMC,OAAN;AAAA,aAAkBD,GAAG,IAAI,CAACC,OAAR,GACtCH,MAAM,CAACE,GAAD,CADgC,GAEtCH,OAAO,iCAAMI,OAAN;AAAeC,QAAAA,EAAE,EAAED,OAAO,CAACE,GAAR,IAAeF,OAAO,CAACC;AAA1C,SAFa;AAAA,KAA1B;AAGH,GAJmC,CAAJ;AAAA,CAAzB;;;;;;;;;;;;;;;;ACHP;AAEA,IAAQG,QAAR,GAAqBC,oDAArB;AAEA,IAAME,MAAM,GAAGJ,+CAAU,CAAC;AAAEK,EAAAA,OAAO,EAAEC,MAAM,CAACL,QAAD;AAAjB,CAAD,CAAzB;AAEO,IAAMZ,MAAM,GAAG,SAATA,MAAS,CAACkB,MAAD,EAASC,QAAT,EAAsB;AACxCJ,EAAAA,MAAM,CAACK,aAAP,CAAqBF,MAAM,CAACG,GAA5B,EAAiC,UAACd,GAAD,EAAMe,GAAN,EAAc;AAC3C,QAAIf,GAAJ,EAAS,OAAOY,QAAQ,CAACZ,GAAD,CAAf;AACT,QAAMgB,UAAU,GAAGD,GAAG,CAACE,YAAJ,EAAnB;AACAL,IAAAA,QAAQ,CAACZ,GAAD,EAAMgB,UAAN,CAAR;AACH,GAJD;AAKH,CANM;;;;;;;;;;;;;;;;ACNA,IAAOE,UAAU,GAAG,WAApB;AACA,IAAMC,OAAO,GAAG,iBAAhB;AACA,IAAOC,UAAU,GAAG,6BAApB;;;;;;;;;;;;;;ACDA,IAAMC,MAAM,GAAG;AAClBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,MAAM,EAAE,GADN;AAEFC,IAAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,MAAR,CAFP;AAGFC,IAAAA,WAAW,EAAE;AAHX,GADY;AAMlBC,EAAAA,SAAS,EAAE;AANO,CAAf;;;;;;;;;;;;;;ACDA,IAAMC,aAAa,GAAG;AAC3BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,OAAO,EAAE,OADC;AAEVC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,UADH;AAEJC,MAAAA,OAAO,EAAE;AAFL,KAFI;AAMVC,IAAAA,UAAU,EAAE;AACVC,MAAAA,eAAe,EAAE;AACfC,QAAAA,UAAU,EAAE;AACVC,UAAAA,IAAI,EAAE,QADI;AAEVC,UAAAA,IAAI,EAAE,gBAFI;AAGV,gBAAI;AAHM;AADG;AADP,KANF;AAeVC,IAAAA,QAAQ,EAAE,CACR;AAAEH,MAAAA,UAAU,EAAE;AAAd,KADQ,CAfA;AAkBVI,IAAAA,mBAAmB,EAAE;AACnBC,MAAAA,SAAS,EAAE;AACTJ,QAAAA,IAAI,EAAE;AADG;AADQ;AAlBX,GADe;AAyB3B;AACAK,EAAAA,IAAI,EAAE,CAAC,wBAAD,EAA2B,yBAA3B;AA1BqB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;ACAP;AAEA,IAAMG,QAAQ,GAAGtC,wBAAjB;AACA,IAAMwC,IAAI,GAAGxC,gBAAb;AACA,IAAM0C,QAAQ,GAAG1C,UAAjB;AACA,IAAM4C,IAAI,GAAG5C,6BAAb;AACA,IAAM8C,kBAAkB,GAAG9C,OAAA,KAA+B,MAA1D;AAEO,IAAMgD,EAAE,GAAG,IAAIZ,gDAAJ,CAAcE,QAAd,EAAwBE,IAAxB,EAA8BE,QAA9B,EAAwC;AACzDE,EAAAA,IAAI,EAAJA,IADyD;AAEzDK,EAAAA,OAAO,EAAE,OAFgD;AAGzDC,EAAAA,OAAO,EAAE;AAHgD,CAAxC,CAAX;AAMP;AACO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACH,EAAD,EAAQ;AACtCI,EAAAA,MAAM,CAACC,IAAP,CAAYL,EAAE,CAACM,MAAf,EAAuBC,OAAvB,CAA+B,UAACC,SAAD,EAAe;AAC7C,QAAI,eAAeR,EAAE,CAACM,MAAH,CAAUE,SAAV,CAAnB,EAAyC;AACxCR,MAAAA,EAAE,CAACM,MAAH,CAAUE,SAAV,EAAqBC,SAArB,CAA+BT,EAAE,CAACM,MAAlC;AACA;AACD,GAJD;AAKA,CANM;AAQP;AAAA,iLAAe,iBAAOI,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEPP,eAAe,CAACH,EAAD,CAFR;;AAAA;AAAA;AAAA,mBAGPA,EAAE,CAACW,YAAH,EAHO;;AAAA;AAAA;AAAA,mBAIPX,EAAE,CAACY,IAAH,CAAQ;AAAEC,cAAAA,KAAK,EAAEf;AAAT,aAAR,CAJO;;AAAA;AAKbY,YAAAA,SAAS;AACTI,YAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AANa;AAAA;;AAAA;AAAA;AAAA;AAQbD,YAAAA,OAAO,CAACC,GAAR;AACAD,YAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;;AATa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;;AAEA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAS;AAC7B;AACA,MAAMC,WAAW,GAAGJ,oDAAY,CAAC3C,0DAAD,CAAhC,CAF6B,CAI7B;;AACA8C,EAAAA,GAAG,CAACE,GAAJ,CAAQ,OAAR,EAAiBJ,iEAAjB,EAAkCA,+DAAA,CAAgBG,WAAhB,CAAlC;AACD,CAND;;AAQA,iEAAeF,aAAf;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AAEO,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAAAC,UAAU;AAAA,SAAI,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX;AAAA,WAAoBtF,OAAO,CAClEC,OAD2D,CACnDkF,UAAU,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,CADyC,WAErD,UAAClF,GAAD,EAAS;AACdoE,MAAAA,OAAO,CAACe,KAAR,CAAc,mBAAmBnF,GAAG,CAACoF,QAAJ,EAAjC;AACA,UAAIpF,GAAJ,EAAS,OAAOiF,GAAG,CAACI,UAAJ,CAAe,GAAf,EAAoBC,IAApB,EAAP;AACZ,KAL6D,CAApB;AAAA,GAAJ;AAAA,CAA/B;AAOA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAR,UAAU;AAAA,SAAI,UAAAS,GAAG;AAAA,WAAI5F,OAAO,CACtDC,OAD+C,CACvCkF,UAAU,CAACS,GAAD,CAD6B,WAEzC,UAACxF,GAAD,EAAS;AACdoE,MAAAA,OAAO,CAACe,KAAR,CAAc,kBAAkBnF,GAAhC;AACH,KAJiD,CAAJ;AAAA,GAAP;AAAA,CAAhC;;;;;;;;;;;;;;;;;;;ACZP;AACA;AACA;;AAEA,IAAM2F,WAAW,GAAG,SAAdA,WAAc,CAAClB,GAAD,EAAMmB,EAAN,EAAa;AAC7BnB,EAAAA,GAAG,CAACE,GAAJ,CAAQc,yDAAA,CAAmB;AAACK,IAAAA,QAAQ,EAAE;AAAX,GAAnB,CAAR;AACArB,EAAAA,GAAG,CAACE,GAAJ,CAAQc,mDAAA,EAAR;AACAhB,EAAAA,GAAG,CAACE,GAAJ,CAAQe,yDAAW,CAACE,EAAD,CAAnB;AACAnB,EAAAA,GAAG,CAACE,GAAJ,CAAQrD,2CAAI,EAAZ;AACH,CALD;;AAOA,iEAAeqE,WAAf;;;;;;;;;;;;;;;;;;;;;;ACXA;AACO,IAAMK,SAAS,GAAG,SAAZA,SAAY,CAAChB,GAAD,EAAMrE,MAAN;AAAA,SAAiBqE,GAAG,CAACiB,OAAJ,CAAYtF,MAAZ,CAAjB;AAAA,CAAlB;AAEP;AAAA,iLAAe,iBAAOqE,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACPvF,YAAAA,KADO,GACCqG,SAAS,CAAChB,GAAD,EAAM,eAAN,CADV;;AAAA,gBAGRrF,KAHQ;AAAA;AAAA;AAAA;;AAAA,6CAIJsF,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,CAAqB,oBAArB,CAJI;;AAAA;AAAA;AAAA;AAAA,mBAOU5F,6EAAW,CAACC,KAAD,CAPrB;;AAAA;AAAA;AAOHO,YAAAA,EAPG,sBAOHA,EAPG;;AAAA,gBAQNA,EARM;AAAA;AAAA;AAAA;;AAAA,6CASF+E,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,CAAqB,mBAArB,CATE;;AAAA;AAWXN,YAAAA,GAAG,CAACmB,MAAJ,GAAajG,EAAb;AAXW,6CAYJgF,IAAI,EAZA;;AAAA;AAAA;AAAA;AAAA,6CAcJD,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,CAAqB,+BAArB,CAdI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACHA,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAAAE,EAAE;AAAA,SAAI,UAACZ,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1CF,IAAAA,GAAG,CAACY,EAAJ,GAASA,EAAT;AACA,WAAOV,IAAI,EAAX;AACH,GAHqB;AAAA,CAAtB;;AAKA,iEAAeQ,WAAf;;;;;;;;;;;;;;ACLA,IAAMU,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK;AAAA,SAAK;AAC3BC,IAAAA,MAD2B,kBACpBC,IADoB,EACd;AACT,aAAOF,KAAK,CAACC,MAAN,CAAaC,IAAb,CAAP;AACH,KAH0B;AAI3BC,IAAAA,GAJ2B,eAIvBC,UAJuB,EAIX;AACZ,aAAOJ,KAAK,CAACK,OAAN,CAAcD,UAAU,GAAG;AAACE,QAAAA,KAAK,EAACF;AAAP,OAAH,GAAyB,EAAjD,CAAP;AACH,KAN0B;AAO3BG,IAAAA,OAP2B,mBAOnB1G,EAPmB,EAOf;AACR,aAAOmG,KAAK,CAACQ,OAAN,CAAc;AAAEF,QAAAA,KAAK,EAAE;AAAEzG,UAAAA,EAAE,EAAFA;AAAF,SAAT;AAAkB4G,QAAAA,GAAG,EAAC;AAAtB,OAAd,CAAP;AACH,KAT0B;AAU3BC,IAAAA,UAV2B,sBAUhB7G,EAVgB,EAUZqG,IAVY,EAUN;AACjB,aAAOF,KAAK,CAACW,MAAN,CAAaT,IAAb,EAAmB;AAAEI,QAAAA,KAAK,EAAE;AAAEzG,UAAAA,EAAE,EAAFA;AAAF;AAAT,OAAnB,CAAP;AACH,KAZ0B;AAa3B8G,IAAAA,MAb2B,kBAapBP,UAboB,EAaRF,IAbQ,EAaF;AACrB,aAAOF,KAAK,CAACW,MAAN,CAAaT,IAAb,EAAmB;AAAEI,QAAAA,KAAK,EAAEF;AAAT,OAAnB,CAAP;AACH,KAf0B;AAgB3BQ,IAAAA,UAhB2B,sBAgBhB/G,EAhBgB,EAgBZ;AACX,aAAOmG,KAAK,CAACa,OAAN,CAAc;AAAEP,QAAAA,KAAK,EAAE;AAAEzG,UAAAA,EAAE,EAAFA;AAAF;AAAT,OAAd,CAAP;AACH,KAlB0B;AAmB3BiH,IAAAA,kBAnB2B,8BAmBRV,UAnBQ,EAmBI;AAC3B,aAAOJ,KAAK,CAACa,OAAN,CAAc;AAAEP,QAAAA,KAAK,EAAEF;AAAT,OAAd,CAAP;AACH,KArB0B;AAsB3BW,IAAAA,YAtB2B,wBAsBdC,SAtBc,EAsBHC,MAtBG,EAsBI;AAC3B,aAAOjB,KAAK,CAACe,YAAN,CAAmB;AAACT,QAAAA,KAAK,EAACU,SAAP;AAAkBE,QAAAA,QAAQ,EAAED;AAA5B,OAAnB,CAAP;AACH;AAxB0B,GAAL;AAAA,CAA1B;;AA4BA,iEAAelB,YAAf;;;;;;;;;;;;;;;;;;AC5BA;AACA;AAEA,oBAA2BoB,sDAA3B;AAAA,IAAOE,QAAP,iBAAOA,QAAP;AAAA,IAAiBrG,MAAjB,iBAAiBA,MAAjB;AAEAA,MAAM,CAAC;AAACH,EAAAA,UAAU,EAAVA,sEAAD;AAAaC,EAAAA,OAAO,EAAPA,mEAAb;AAAsBC,EAAAA,UAAU,EAAVA,sEAAUA;AAAhC,CAAD,CAAN;AAEO,IAAMuG,YAAY,GAAG,SAAfA,YAAe,CAACC,UAAD,EAAaC,OAAb;AAAA,SAAyB,IAAIjI,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAClF4H,IAAAA,QAAQ,CAACI,aAAT,CAAuBD,OAAvB,EAAgC,UAAC1C,KAAD,EAAQ4C,MAAR,EAAmB;AAC/C,UAAI5C,KAAJ,EAAW;AACPrF,QAAAA,MAAM,CAACqF,KAAD,CAAN;AACH,OAFD,MAEO;AACHtF,QAAAA,OAAO,CAACkI,MAAD,CAAP;AACH;AACJ,KAND,EAMGC,GANH,CAMOJ,UANP;AAOH,GARoD,CAAzB;AAAA,CAArB;AAUA,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAAAC,SAAS;AAAA,SAAI,IAAItI,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV;AAAA,WAAqB4H,QAAQ,CAACR,OAAT,CAAiBgB,SAAjB,EAA4B,UAAClI,GAAD,EAAS;AACzG,UAAIA,GAAJ,EAAS;AACLF,QAAAA,MAAM,CAACE,GAAD,CAAN;AACH,OAFD,MAEO;AACHH,QAAAA,OAAO;AACV;AACJ,KANuE,CAArB;AAAA,GAAZ,CAAJ;AAAA,CAA5B;;;;;;;;;;;;;;;;;;;;;;;;;ACjBP;AACA;CAEA;;AACA;AAEA,IAAMwI,MAAM,GAAG5C,qDAAA,EAAf,EAEA;;AACA4C,MAAM,CAACE,IAAP,CAAY,QAAZ,EAAsBzD,uEAAY;AAAA,iLAAC,iBAAOE,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEZkD,yDAAA,CAAiBnD,GAAG,CAACyD,IAAJ,CAAS9I,KAA1B,EAAiCqF,GAAG,CAACyD,IAAJ,CAASC,SAA1C,CAFY;;AAAA;AAEzBnC,YAAAA,IAFyB;AAG/BtB,YAAAA,GAAG,CAACK,IAAJ,CAASiB,IAAT;;AAH+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAAlC;AAOA,iEAAe,UAAA9B,GAAG;AAAA,SAAIA,GAAG,CAACE,GAAJ,CAAQ,OAAR,EAAiB0D,MAAjB,CAAJ;AAAA,CAAlB;;;;;;;;;;;;;;;;;AChBA;AAEA,IAAMhH,MAAM,GAAG;AACXuH,EAAAA,MAAM,EAAEtI,sBADG;AAEXwI,EAAAA,QAAQ,EAAExI,kCAFC;AAGX0I,EAAAA,YAAY,EAAE1I,kEAHH;AAIX4I,EAAAA,QAAQ,EAAE5I,sCAA0B6I;AAJzB,CAAf;AAOO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAM,IAAIT,+DAAJ,CAA2BtH,MAA3B,CAAN;AAAA,CAAzB;AAEA,IAAMiI,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,SAAM,IAAIX,mEAAJ,CAA+BtH,MAA/B,CAAN;AAAA,CAA7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXP;AACA;AACA;AAEO,IAAMmI,eAAe,GAAG,SAAlBA,eAAkB,CAAA7J,KAAK;AAAA,SAAI,IAAIC,OAAJ,CAAa,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtEN,IAAAA,0DAAA,CAAWG,KAAX,EAAkBF,2CAAlB,EAA0B,UAACO,GAAD,EAAMC,OAAN;AAAA,aAAkBD,GAAG,IAAI,CAACC,OAAR,GACtCH,MAAM,CAACE,GAAD,CADgC,GAEtCH,OAAO,iCAAMI,OAAN;AAAeC,QAAAA,EAAE,EAAED,OAAO,CAACE,GAAR,IAAeF,OAAO,CAACC;AAA1C,SAFa;AAAA,KAA1B;AAGH,GAJuC,CAAJ;AAAA,CAA7B;AAMA,IAAMmJ,gBAAgB,GAAGD,sDAAgB,EAAzC;AACA,IAAMG,oBAAoB,GAAGD,0DAAoB,EAAjD;;;;;;;;;;;;;;;;ACXP;AAEA,IAAQjJ,QAAR,GAAqBC,oDAArB;AAEA,IAAME,MAAM,GAAGJ,+CAAU,CAAC;AAAEK,EAAAA,OAAO,EAAEC,MAAM,CAACL,QAAD;AAAjB,CAAD,CAAzB;AAEO,IAAMZ,MAAM,GAAG,SAATA,MAAS,CAACkB,MAAD,EAASC,QAAT,EAAsB;AACxCJ,EAAAA,MAAM,CAACK,aAAP,CAAqBF,MAAM,CAACG,GAA5B,EAAiC,UAACd,GAAD,EAAMe,GAAN,EAAc;AAC3C,QAAIf,GAAJ,EAAS,OAAOY,QAAQ,CAACZ,GAAD,CAAf;AACT,QAAMgB,UAAU,GAAGD,GAAG,CAACE,YAAJ,EAAnB;AACAL,IAAAA,QAAQ,CAACZ,GAAD,EAAMgB,UAAN,CAAR;AACH,GAJD;AAKH,CANM;;;;;;;;;;;;;;;;ACNP;AACA;AAEA,IAAMmH,UAAU,GAAG;AACfK,EAAAA,KADe,iBACT7I,KADS,EACF+I,SADE,EACS;AACpB,WAAOe,oDAAO,GAAGC,MAAV,CAAiB/J,KAAjB,EAAwB+I,SAAxB,CAAP;AACH;AAHc,CAAnB;AAMA,iEAAeP,UAAf;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;;AAEA,IAAM9B,KAAK,qBACJD,iFAAY,CAACuD,+CAAD,CADR,CAAX;;AAKA,iEAAetD,KAAf;;;;;;;;;;;;;;;ACRA;;AACA,eAAsBuD,mBAAO,CAAC,4BAAD,CAA7B;AAAA,IAAQjH,SAAR,YAAQA,SAAR;;AAEA,iEAAeW,4DAAA,CAAU,MAAV,EAAkB;AAChCwG,EAAAA,OAAO,EAAEnH,SAAS,CAACoH,MADa;AAEhCC,EAAAA,SAAS,EAAErH,SAAS,CAACoH,MAFW;AAGhCE,EAAAA,GAAG,EAAEtH,SAAS,CAACoH,MAHiB;AAIhCG,EAAAA,OAAO,EAAEvH,SAAS,CAACwH;AAJa,CAAlB,CAAf;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;;AAGA,IAAMG,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAO;AACjBZ,IAAAA,MADiB,kBACVa,aADU,EACK7B,SADL,EACgB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAC8Bc,uDAAe,CAACe,aAAD,CAD7C;;AAAA;AAAA;AAC3BrK,gBAAAA,EAD2B,yBAC3BA,EAD2B;AACvBsK,gBAAAA,cADuB,yBACvBA,cADuB;AACPC,gBAAAA,UADO,yBACPA,UADO;AACKC,gBAAAA,OADL,yBACKA,OADL;AACcC,gBAAAA,KADd,yBACcA,KADd;AAAA;AAAA,uBAEjBnB,uDAAe,CAACe,aAAD,CAFE;;AAAA;AAE7BK,gBAAAA,GAF6B;AAG7BvE,gBAAAA,KAH6B,GAGrBqC,SAAS,GAAG2B,sDAAH,GAAkBD,sDAHN;AAAA;AAAA,uBAIhB/D,KAAK,CAACe,YAAN,CAAmB;AAAEuD,kBAAAA,KAAK,EAALA;AAAF,iBAAnB,EAA8B;AAAEb,kBAAAA,OAAO,EAAE5J,EAAX;AAAemC,kBAAAA,IAAI,EAAEoI,UAArB;AAAiCC,kBAAAA,OAAO,EAAPA;AAAjC,iBAA9B,CAJgB;;AAAA;AAI7B5H,gBAAAA,IAJ6B;AAAA,iDAK5B;AAAEA,kBAAAA,IAAI,EAAJA,IAAF;AAAQ+H,kBAAAA,QAAQ,EAAEL;AAAlB,iBAL4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMtC,KAPsB;AAQvBM,IAAAA,UARuB,sBAQZC,cARY,EAQI;AACvB,aAAO1B,+DAAA,CAA4B;AAAEnJ,QAAAA,EAAE,EAAE6K;AAAN,OAA5B,CAAP;AACH;AAVsB,GAAP;AAAA,CAApB;;AAaA,iEAAeT,WAAf;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;;AAEA,IAAMjE,KAAK,mCACJD,iFAAY,CAACuD,+CAAD,CADR;AAEPqB,EAAAA,mBAFO,+BAEavE,UAFb,EAEyBwE,aAFzB,EAEuC;AAC1C,WAAOtB,sDAAA,CAAc;AAACsB,MAAAA,aAAa,EAAbA;AAAD,KAAd,EAA8B;AAACtE,MAAAA,KAAK,EAACF;AAAP,KAA9B,CAAP;AACH;AAJM,EAAX;;AAOA,iEAAeJ,KAAf;;;;;;;;;;;;;;;ACVA;AAEA,IAAM6E,gBAAgB,GAAG5H,4DAAA,CAAU,kBAAV,EAA8B;AACnDpD,EAAAA,EAAE,EAAE;AACAkC,IAAAA,IAAI,EAAEO,oEADN;AAEAyI,IAAAA,UAAU,EAAE,IAFZ;AAGAC,IAAAA,aAAa,EAAE,IAHf;AAIAC,IAAAA,SAAS,EAAE;AAJX,GAD+C;AAOnDL,EAAAA,aAAa,EAAE;AACX7I,IAAAA,IAAI,EAAEO,oEADK;AAEX4I,IAAAA,YAAY,EAAE;AAFH,GAPoC;AAWnDC,EAAAA,aAAa,EAAE;AACXpJ,IAAAA,IAAI,EAAEO,oEADK;AAEX4I,IAAAA,YAAY,EAAE;AAFH,GAXoC;AAenDE,EAAAA,SAAS,EAAE;AACPrJ,IAAAA,IAAI,EAAEO,oEADC;AAEP4I,IAAAA,YAAY,EAAE;AAFP,GAfwC;AAmBnDG,EAAAA,IAAI,EAAE;AACFtJ,IAAAA,IAAI,EAAEO,oEADJ;AAEF4I,IAAAA,YAAY,EAAE;AAFZ,GAnB6C;AAuBnDI,EAAAA,SAAS,EAAEhJ,oEAAiBwI;AAvBuB,CAA9B,CAAzB;;AA2BAD,gBAAgB,CAACnH,SAAjB,GAA6B,gBAA4B;AAAA,MAAzB6H,SAAyB,QAAzBA,SAAyB;AAAA,MAAd1B,OAAc,QAAdA,OAAc;AACrDgB,EAAAA,gBAAgB,CAACW,SAAjB,CAA2BD,SAA3B,EAAsC;AAAEE,IAAAA,UAAU,EAAE;AAAER,MAAAA,SAAS,EAAE;AAAb;AAAd,GAAtC;AACAJ,EAAAA,gBAAgB,CAACW,SAAjB,CAA2B3B,OAA3B,EAAoC;AAAE4B,IAAAA,UAAU,EAAE;AAAER,MAAAA,SAAS,EAAE;AAAb;AAAd,GAApC;AACH,CAHD;;AAKA,iEAAeJ,gBAAf;;;;;;;;;;;;;;;;;;;;;;;;;AClCA;AACA;CAEA;;AACA;AAEA,IAAM7C,MAAM,GAAG5C,qDAAA,EAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA4C,MAAM,CAACE,IAAP,CAAY,GAAZ,EAAiBzD,uEAAY;AAAA,iLAAC,iBAAOE,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACOD,GADP,CACnByD,IADmB,EACZuB,SADY,aACZA,SADY,EACDC,GADC,aACDA,GADC;AAAA;AAAA,mBAEP9B,oFAAA,CAA4C6B,SAA5C,EAAuDC,GAAvD,CAFO;;AAAA;AAEpB1D,YAAAA,IAFoB;AAG1BtB,YAAAA,GAAG,CAACK,IAAJ,CAASiB,IAAT;;AAH0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAA7B;AAMA8B,MAAM,CAAC7B,GAAP,CAAW,eAAX,EAA4B1B,uEAAY;AAAA,kLAAC,kBAAOE,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACHD,GADG,CAC9BgH,KAD8B,EACtB/B,GADsB,cACtBA,GADsB,EACjBD,SADiB,cACjBA,SADiB;AAAA;AAAA,mBAEb7B,4EAAA,CAAoC8B,GAApC,EAAyCD,SAAzC,CAFa;;AAAA;AAE/B4B,YAAAA,SAF+B;AAGrC3G,YAAAA,GAAG,CAACK,IAAJ,CAASsG,SAAT;;AAHqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAAxC;AAMAvD,MAAM,CAACE,IAAP,CAAY,YAAZ,EAA0BzD,uEAAY;AAAA,kLAAC,kBAAOE,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACGD,GADH,CAC5ByD,IAD4B,EACrBwB,GADqB,cACrBA,GADqB,EAChBD,SADgB,cAChBA,SADgB,EACLkC,GADK,cACLA,GADK;AAAA;AAAA,mBAEX/D,6DAAA,CAAqB8B,GAArB,EAA0BD,SAA1B,EAAoCkC,GAApC,CAFW;;AAAA;AAE7BN,YAAAA,SAF6B;AAGnC5G,YAAAA,GAAG,CAACY,EAAJ,CAAOwG,IAAP,CAAY,kBAAZ,EAAgCR,SAAhC;;AAHmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAAtC;AAMAvD,MAAM,CAACE,IAAP,CAAY,cAAZ,EAA4BzD,uEAAY;AAAA,kLAAC,kBAAOE,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACJD,GADI,CAC9ByD,IAD8B,EACvBwB,GADuB,cACvBA,GADuB,EAClBD,SADkB,cAClBA,SADkB;AAAA;AAAA,mBAEN7B,+DAAA,CAAuB8B,GAAvB,EAA4BD,SAA5B,CAFM;;AAAA;AAE/BsC,YAAAA,gBAF+B;AAGrCtH,YAAAA,GAAG,CAACY,EAAJ,CAAOwG,IAAP,CAAY,kBAAZ,EAAgCE,gBAAhC,EAHqC,CAKtC;AACH;AACC;;AAPwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAAxC;AAWA,iEAAe,UAAA7H,GAAG;AAAA,SAAIA,GAAG,CAACE,GAAJ,CAAQ,YAAR,EAAsB0D,MAAtB,CAAJ;AAAA,CAAlB;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;;AAEA,IAAMkE,iBAAiB,GAAG,SAApBA,iBAAoB,CAAC3G,EAAD,EAAK4G,MAAL,EAAgB;AACtCA,EAAAA,MAAM,CAACC,EAAP,CAAU,iCAAV,EAA6ClH,wEAAa;AAAA,mLAAC,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AACvDI,cAAAA,EAAE,CAACwG,IAAH,CAAQ,iCAAR,EAA2C5G,GAA3C;;AADuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;AAAA,MAA1D;AAGH,CAJD;;AAMA,iEAAe+G,iBAAf;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AAEA,IAAMpE,UAAU,GAAG;AACf3B,EAAAA,GADe,eACXC,UADW,EACC;AACZ,WAAOJ,kDAAA,CAAUI,UAAV,CAAP;AACH,GAHc;AAIfG,EAAAA,OAJe,mBAIP1G,EAJO,EAIH;AACR,WAAOmG,sDAAA,CAAcnG,EAAd,CAAP;AACH,GANc;AAOfoG,EAAAA,MAPe,kBAORC,IAPQ,EAOF;AACT,WAAOF,qDAAA,CAAaE,IAAb,CAAP;AACH,GATc;AAUfQ,EAAAA,UAVe,sBAUJ7G,EAVI,EAUAqG,IAVA,EAUM;AACjB,WAAOF,yDAAA,CAAiBnG,EAAjB,EAAqBqG,IAArB,CAAP;AACH,GAZc;AAafU,EAAAA,UAbe,sBAaJ/G,EAbI,EAaA;AACX,WAAOmG,yDAAA,CAAiBnG,EAAjB,CAAP;AACH,GAfc;AAgBfwM,EAAAA,gBAhBe,4BAgBE1C,SAhBF,EAgBa;AACxB,WAAO3D,+DAAA,CAAuB2D,SAAvB,CAAP;AACH,GAlBc;AAmBTiC,EAAAA,wBAnBS,oCAmBgBhC,GAnBhB,EAmBqBD,SAnBrB,EAmBgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACnB3D,uEAAA,CAA+B;AAAE4D,gBAAAA,GAAG,EAAHA,GAAF;AAAOD,gBAAAA,SAAS,EAATA;AAAP,eAA/B,CADmB;;AAAA;AACrC4B,cAAAA,SADqC;AAAA,+CAEpCA,SAFoC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG9C,GAtBc;AAuBTG,EAAAA,gCAvBS,4CAuBwB/B,SAvBxB,EAuBmCC,GAvBnC,EAuBwC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAChC,KAAI,CAACgC,wBAAL,CAA8BjC,SAA9B,EAAyCC,GAAzC,CADgC;;AAAA;AAC7C1D,cAAAA,IAD6C;;AAAA,kBAE9CA,IAF8C;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAGzCF,qDAAA,CAAa;AAAE2D,gBAAAA,SAAS,EAATA,SAAF;AAAaC,gBAAAA,GAAG,EAAHA;AAAb,eAAb,CAHyC;;AAAA;AAAA;AAAA,qBAIlC,KAAI,CAACgC,wBAAL,CAA8BjC,SAA9B,EAAyCC,GAAzC,CAJkC;;AAAA;AAAA;;AAAA;AAAA,gDAM5C1D,IAN4C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOtD,GA9Bc;AA+BT4F,EAAAA,SA/BS,qBA+BClC,GA/BD,EA+BMD,SA/BN,EA+BiBkC,GA/BjB,EA+BsB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACP7F,kDAAA,CAAU;AAAE4D,gBAAAA,GAAG,EAAHA,GAAF;AAAOD,gBAAAA,SAAS,EAATA;AAAP,eAAV,CADO;;AAAA;AAAA;AAAA;AAC1B4B,cAAAA,SAD0B;AAAA;AAAA,qBAE3BvF,yDAAA,CAAiBuF,SAAS,CAAC1L,EAA3B,EAA+B;AAAEgM,gBAAAA,GAAG,EAAHA;AAAF,eAA/B,CAF2B;;AAAA;AAAA;AAAA,qBAGpB7F,uEAAA,CAA+B;AAAE4D,gBAAAA,GAAG,EAAHA,GAAF;AAAOD,gBAAAA,SAAS,EAATA;AAAP,eAA/B,CAHoB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIpC,GAnCc;AAoCTqC,EAAAA,WApCS,uBAoCGpC,GApCH,EAoCQD,SApCR,EAoCmB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACJ3D,kDAAA,CAAU;AAAE4D,gBAAAA,GAAG,EAAHA,GAAF;AAAOD,gBAAAA,SAAS,EAATA;AAAP,eAAV,CADI;;AAAA;AAAA;AAAA;AACvB4B,cAAAA,SADuB;AAAA;AAAA,qBAExBV,uEAAA,CAAwB;AAAEyB,gBAAAA,WAAW,EAAEf,SAAS,CAACgB,UAAV,CAAqB1M;AAApC,eAAxB,EAAkE;AAAE+K,gBAAAA,aAAa,EAAE,KAAjB;AAAwBS,gBAAAA,IAAI,EAAE,KAA9B;AAAqCD,gBAAAA,SAAS,EAAE;AAAhD,eAAlE,CAFwB;;AAAA;AAAA;AAAA,qBAGjBpF,uEAAA,CAA+B;AAAE4D,gBAAAA,GAAG,EAAHA,GAAF;AAAOD,gBAAAA,SAAS,EAATA;AAAP,eAA/B,CAHiB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIjC;AAxCc,CAAnB;AA2CA,iEAAe7B,UAAf;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;;AAEA,IAAM9B,KAAK,mCACJD,iFAAY,CAACuD,+CAAD,CADR;AAEPsC,EAAAA,wBAFO,oCAEkBxF,UAFlB,EAE6B;AAChC,WAAOkD,uDAAA,CAAe;AAAChD,MAAAA,KAAK,EAACF,UAAP;AAAkBqG,MAAAA,OAAO,EAAED,6DAAOA;AAAlC,KAAf,CAAP;AACH,GAJM;AAKPH,EAAAA,gBALO,4BAKU1C,SALV,EAKqB;AACxB,WAAOL,uDAAA,CAAe;AAAEhD,MAAAA,KAAK,EAAE;AAAEqD,QAAAA,SAAS,EAATA;AAAF,OAAT;AAA2B+C,MAAAA,KAAK,EAAE,CAAE,CAAE,WAAF,EAAe,MAAf,CAAF;AAAlC,KAAf,CAAP;AAEH;AARM,EAAX;;AAWA,iEAAe1G,KAAf;;;;;;;;;;;;;;;;AChBA;AACA;AAEA,IAAM2G,SAAS,GAAG1J,4DAAA,CAAU,WAAV,EAAuB;AACrC0G,EAAAA,SAAS,EAAErH,mEAD0B;AAErCsH,EAAAA,GAAG,EAAEtH,mEAFgC;AAGrCuJ,EAAAA,GAAG,EAAE;AACD9J,IAAAA,IAAI,EAACO,mEADJ;AAED4I,IAAAA,YAAY,EAAC;AAFZ;AAHgC,CAAvB,CAAlB;;AASAyB,SAAS,CAACjJ,SAAV,GAAsB,gBAAiC;AAAA,MAA/BmG,OAA+B,QAA/BA,OAA+B;AAAA,MAAtB+C,gBAAsB,QAAtBA,gBAAsB;AACnDD,EAAAA,SAAS,CAACE,aAAV,CAAwBhD,OAAxB,EAAiC;AAACiD,IAAAA,OAAO,EAAEjC,uEAAV;AAA4BkC,IAAAA,QAAQ,EAAE;AAAtC,GAAjC,EADmD,CAEnD;AACH,CAHD;;AAMA,iEAAeJ,SAAf;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;CAEA;;AACA;AACA;AACA;AAEO,IAAMW,MAAM,GAAG,SAATA,MAAS,CAAClJ,GAAD,EAAKmJ,QAAL,EAAkB;AACpCP,EAAAA,kEAAa,CAAC5I,GAAD,EAAKmJ,QAAL,CAAb;AACAL,EAAAA,kEAAa,CAAC9I,GAAD,CAAb;AACA+I,EAAAA,oEAAe,CAAC/I,GAAD,CAAf;AACAiJ,EAAAA,+DAAU,CAACjJ,GAAD,CAAV;AACH,CALM;AAOA,IAAMoJ,OAAO,GAAG,SAAVA,OAAU,CAACjI,EAAD,EAAK4G,MAAL,EAAgB;AACnCc,EAAAA,oEAAc,CAAC1H,EAAD,EAAK4G,MAAL,CAAd,CADmC,CAEnC;AACF;AACD,CAJM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfP;AACA;AACA;AACA;AACA;CAGA;;AACA;AAGA,IAAMnE,MAAM,GAAG5C,qDAAA,EAAf;AAEA4C,MAAM,CAACE,IAAP,CAAY,GAAZ,EAAiBzD,uEAAY;AAAA,iLAAC,iBAAOE,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACgCD,GADhC,CAClByD,IADkB,EACVuB,SADU,aACVA,SADU,EACCgE,IADD,aACCA,IADD,EACO/D,GADP,aACOA,GADP,EACYS,OADZ,aACYA,OADZ,EACqBrI,IADrB,aACqBA,IADrB;AAAA;AAAA,mBAEP8F,sGAAA,CAA8D;AAC7E6B,cAAAA,SAAS,EAATA,SAD6E;AAE7EgE,cAAAA,IAAI,EAAJA,IAF6E;AAG7E/D,cAAAA,GAAG,EAAHA,GAH6E;AAI7ES,cAAAA,OAAO,EAAPA,OAJ6E;AAK7ErI,cAAAA,IAAI,EAAJA;AAL6E,aAA9D,CAFO;;AAAA;AAEpBkE,YAAAA,IAFoB;AAU1BtB,YAAAA,GAAG,CAACK,IAAJ,CAASiB,IAAT;;AAV0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAA7B;AAaA8B,MAAM,CAACE,IAAP,CAAY,sBAAZ,EAAoCzD,uEAAY;AAAA,kLAAC,kBAAOE,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACgBD,GADhB,CACrCyD,IADqC,EAC7ByF,SAD6B,cAC7BA,SAD6B,EAClBvB,WADkB,cAClBA,WADkB,EACL1C,GADK,cACLA,GADK,EACAD,SADA,cACAA,SADA;AAAA;AAAA,mBAEvC7B,8EAAA,CAAsC+F,SAAtC,EAAiDvB,WAAjD,EAA8D1C,GAA9D,EAAmED,SAAnE,CAFuC;;AAAA;AAAA;AAAA,mBAGd7B,wEAAA,CAAgCnD,GAAG,CAACyD,IAApC,CAHc;;AAAA;AAGvC6D,YAAAA,gBAHuC;AAI7CtH,YAAAA,GAAG,CAACY,EAAJ,CAAOwG,IAAP,CAAY,kBAAZ,EAAgCE,gBAAhC;;AAJ6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAAhD;AAQAjE,MAAM,CAACE,IAAP,CAAY,gBAAZ,EAA8BzD,uEAAY;AAAA,kLAAC,kBAAOE,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACRkD,wEAAA,CAAgCnD,GAAG,CAACyD,IAApC,CADQ;;AAAA;AACjC6D,YAAAA,gBADiC;AAEvCtH,YAAAA,GAAG,CAACY,EAAJ,CAAOwG,IAAP,CAAY,kBAAZ,EAAgCE,gBAAhC;AACArH,YAAAA,GAAG,CAACK,IAAJ,CAAS,GAAT;;AAHuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAA1C;AAMA+C,MAAM,CAACE,IAAP,CAAY,YAAZ,EAA0BzD,uEAAY;AAAA,kLAAC,kBAAOE,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJkD,oEAAA,CAA4BnD,GAAG,CAACyD,IAAhC,CADI;;AAAA;AAC7B6D,YAAAA,gBAD6B;AAEnCA,YAAAA,gBAAgB,CAACM,UAAjB,CAA4BnB,SAA5B,GAAwCzG,GAAG,CAACyD,IAAJ,CAASgD,SAAjD;AACAzG,YAAAA,GAAG,CAACY,EAAJ,CAAOwG,IAAP,CAAY,kBAAZ,EAAgCE,gBAAhC;AACArH,YAAAA,GAAG,CAACK,IAAJ,CAAS,GAAT;;AAJmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAAtC;AAOA+C,MAAM,CAACE,IAAP,CAAY,gBAAZ,EAA8BzD,uEAAY;AAAA,kLAAC,kBAAOE,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACRkD,wEAAA,CAAgCnD,GAAG,CAACyD,IAApC,CADQ;;AAAA;AACjC6D,YAAAA,gBADiC;AAEvCtH,YAAAA,GAAG,CAACY,EAAJ,CAAOwG,IAAP,CAAY,kBAAZ,EAAgCE,gBAAhC;AACArH,YAAAA,GAAG,CAACK,IAAJ,CAAS,GAAT;;AAHuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAA1C;AAMA+C,MAAM,CAACE,IAAP,CAAY,YAAZ,EAA0BzD,uEAAY;AAAA,kLAAC,kBAAOE,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJkD,oEAAA,CAA4BnD,GAAG,CAACyD,IAAhC,CADI;;AAAA;AAC7B6D,YAAAA,gBAD6B;AAEnCtH,YAAAA,GAAG,CAACY,EAAJ,CAAOwG,IAAP,CAAY,kBAAZ,EAAgCE,gBAAhC;AACArH,YAAAA,GAAG,CAACK,IAAJ,CAAS,GAAT;;AAHmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAAtC;AAMA+C,MAAM,CAACE,IAAP,CAAY,OAAZ,EAAqBzD,uEAAY;AAAA,kLAAC,kBAAOE,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACCkD,wDAAA,CAAgBnD,GAAG,CAACyD,IAApB,CADD;;AAAA;AACxB6D,YAAAA,gBADwB;AAE9BtH,YAAAA,GAAG,CAACY,EAAJ,CAAOwG,IAAP,CAAY,kBAAZ,EAAgCE,gBAAhC;AACArH,YAAAA,GAAG,CAACK,IAAJ,CAAS,GAAT;;AAH8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAAjC,GAOA;;AACA,IAAMkJ,QAAQ,GAAGV,yDAAA,CAAmB;AAChCY,EAAAA,WAAW,EAAE,mBADmB;AAEhCC,EAAAA,QAAQ,EAAE,kBAAU3J,GAAV,EAAe4J,IAAf,EAAqBC,EAArB,EAAyB;AAC/B,QAAMC,SAAS,GAAG,WAAW9J,GAAG,CAACmB,MAAf,GAAwB4H,mDAAA,CAAaa,IAAI,CAACI,YAAlB,CAA1C;AACAH,IAAAA,EAAE,CAAC,IAAD,EAAOC,SAAP,CAAF;AACH;AAL+B,CAAnB,CAAjB;AAQA,IAAMG,OAAO,GAAGnB,2DAAA,CAAqB;AACjCY,EAAAA,WAAW,EAAE;AADoB,CAArB,CAAhB;AAGA,IAAMS,MAAM,GAAGrB,6CAAM,CAAC;AAAEmB,EAAAA,OAAO,EAAPA;AAAF,CAAD,CAArB;AAGA5G,MAAM,CAACE,IAAP,CAAY,eAAZ,EAA6B4G,MAAM,CAACC,MAAP,CAAc,MAAd,CAA7B,EAAoDtK,uEAAY;AAAA,kLAAC,kBAAOE,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACvD6E,YAAAA,OADuD,GAC7C9E,GAAG,CAACyD,IAAJ,CAASqB,OADoC;;AAAA,iBAGzD9E,GAAG,CAAC4J,IAHqD;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAIpCjH,2EAAY,CAAC3C,GAAG,CAAC4J,IAAJ,CAASS,MAAV,EAAkB;AAAEC,cAAAA,MAAM,EAAE;AAAV,aAAlB,CAJwB;;AAAA;AAInDvH,YAAAA,MAJmD;AAAA;AAAA,mBAK1BI,2EAAA,CAAmC2B,OAAnC,EAA4C/B,MAAM,CAACyH,UAAnD,CAL0B;;AAAA;AAKnDlD,YAAAA,gBALmD;AAMzDtH,YAAAA,GAAG,CAACY,EAAJ,CAAOwG,IAAP,CAAY,kBAAZ,EAAgCE,gBAAhC;;AANyD;AAQ7DrH,YAAAA,GAAG,CAACK,IAAJ,CAAS,GAAT;;AAR6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAAhE;AAWA+C,MAAM,CAACE,IAAP,CAAY,mBAAZ,EAAiCzD,uEAAY;AAAA,kLAAC,kBAAOE,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBAC+BD,GAD/B,CAClCyD,IADkC,EAC1BwB,GAD0B,cAC1BA,GAD0B,EACrBD,SADqB,cACrBA,SADqB,EACVkE,SADU,cACVA,SADU,EACCuB,uBADD,cACCA,uBADD;AAAA;AAAA,mBAEXtH,uEAAA,CAA+B;AAAE8B,cAAAA,GAAG,EAAHA,GAAF;AAAOD,cAAAA,SAAS,EAATA,SAAP;AAAkBkE,cAAAA,SAAS,EAATA,SAAlB;AAA6BuB,cAAAA,uBAAuB,EAAvBA;AAA7B,aAA/B,CAFW;;AAAA;AAEpCnD,YAAAA,gBAFoC;AAG1CtH,YAAAA,GAAG,CAACY,EAAJ,CAAOwG,IAAP,CAAY,kBAAZ,EAAgCE,gBAAhC;AACArH,YAAAA,GAAG,CAACK,IAAJ,CAAS,GAAT;;AAJ0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAA7C;AAUA+C,MAAM,CAACE,IAAP,CAAY,gBAAZ,EAA8BzD,uEAAY;AAAA,mLAAC,mBAAOE,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACqBD,GADrB,CAC/ByD,IAD+B,EACvBkH,UADuB,cACvBA,UADuB,EACXzB,SADW,cACXA,SADW,EACAjE,GADA,cACAA,GADA,EACKD,SADL,cACKA,SADL;AAAA;AAAA,mBAER7B,iEAAA,CAAyB;AAAEwH,cAAAA,UAAU,EAAVA,UAAF;AAAczB,cAAAA,SAAS,EAATA,SAAd;AAAyBjE,cAAAA,GAAG,EAAHA,GAAzB;AAA8BD,cAAAA,SAAS,EAATA;AAA9B,aAAzB,CAFQ;;AAAA;AAEjCsC,YAAAA,gBAFiC;AAGvCtH,YAAAA,GAAG,CAACY,EAAJ,CAAOwG,IAAP,CAAY,kBAAZ,EAAgCE,gBAAhC;AACArH,YAAAA,GAAG,CAACK,IAAJ,CAAS,GAAT;;AAJuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAA1C;AAOA+C,MAAM,CAACE,IAAP,CAAY,kBAAZ,EAAgCzD,uEAAY;AAAA,mLAAC,mBAAOE,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACaD,GADb,CACjCyD,IADiC,EACzBvI,EADyB,cACzBA,EADyB,EACrB2P,WADqB,cACrBA,WADqB,EACR5F,GADQ,cACRA,GADQ,EACHD,SADG,cACHA,SADG;AAAA;AAAA,mBAEV7B,mEAAA,CAA2B;AAAEjI,cAAAA,EAAE,EAAFA,EAAF;AAAM2P,cAAAA,WAAW,EAAXA,WAAN;AAAmB5F,cAAAA,GAAG,EAAHA,GAAnB;AAAwBD,cAAAA,SAAS,EAATA;AAAxB,aAA3B,CAFU;;AAAA;AAEnCsC,YAAAA,gBAFmC;AAGzCtH,YAAAA,GAAG,CAACY,EAAJ,CAAOwG,IAAP,CAAY,kBAAZ,EAAgCE,gBAAhC;AACArH,YAAAA,GAAG,CAACK,IAAJ,CAAS,GAAT;;AAJyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAA5C;AAQA,iEAAe,UAAAb,GAAG;AAAA,SAAIA,GAAG,CAACE,GAAJ,CAAQ,UAAR,EAAoB0D,MAApB,CAAJ;AAAA,CAAlB;;;;;;;;;;;;;;;;;;;;;;;ACrHA;AACA;AACA;;AAEA,IAAMkE,iBAAiB,GAAG,SAApBA,iBAAoB,CAAC3G,EAAD,EAAK4G,MAAL,EAAgB;AACtCA,EAAAA,MAAM,CAACC,EAAP,CAAU,iCAAV,EAA6ClH,wEAAa;AAAA,mLAAC,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAC/B2C,sGAAA,CAA8D3C,GAA9D,CAD+B;;AAAA;AACjDoG,cAAAA,SADiD;AAEvDhG,cAAAA,EAAE,CAACwG,IAAH,CAAQ,mBAAR,EAA6BR,SAA7B;;AAFuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;AAAA,MAA1D;AAMAY,EAAAA,MAAM,CAACC,EAAP,CAAU,kBAAV,EAA8BlH,wEAAa;AAAA,oLAAC,kBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACT2C,oEAAA,CAA4B3C,GAA5B,CADS;;AAAA;AAClC8G,cAAAA,gBADkC;AAExC1G,cAAAA,EAAE,CAACwG,IAAH,CAAQ,sBAAR,EAAgCE,gBAAhC;;AAFwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;AAAA,MAA3C;AAKAE,EAAAA,MAAM,CAACC,EAAP,CAAU,iBAAV,EAA4BlH,wEAAa;AAAA,oLAAC,kBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACPuK,sFAAA,CAA6CvK,GAAG,CAACyE,GAAjD,EAAsDzE,GAAG,CAACwE,SAA1D,CADO;;AAAA;AAChCsC,cAAAA,gBADgC;AAEtC1G,cAAAA,EAAE,CAACwG,IAAH,CAAQ,kBAAR,EAA4BE,gBAA5B;;AAFsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;AAAA,MAAzC;AAIH,CAhBD;;AAkBA,iEAAeC,iBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AAEA,IAAMpE,UAAU,GAAG;AACf3B,EAAAA,GADe,eACXC,UADW,EACC;AACZ,WAAOJ,kDAAA,CAAUI,UAAV,CAAP;AACH,GAHc;AAIfG,EAAAA,OAJe,mBAIP1G,EAJO,EAIH;AACR,WAAOmG,sDAAA,CAAcnG,EAAd,CAAP;AACH,GANc;AAOfoG,EAAAA,MAPe,kBAORC,IAPQ,EAOF;AACT,WAAOF,qDAAA,CAAaE,IAAb,CAAP;AACH,GATc;AAUfQ,EAAAA,UAVe,sBAUJ7G,EAVI,EAUAqG,IAVA,EAUM;AACjB,WAAOF,yDAAA,CAAiBnG,EAAjB,EAAqBqG,IAArB,CAAP;AACH,GAZc;AAafU,EAAAA,UAbe,sBAaJ/G,EAbI,EAaA;AACX,WAAOmG,yDAAA,CAAiBnG,EAAjB,CAAP;AACH,GAfc;AAgBTkO,EAAAA,oBAhBS,gCAgBY5I,GAhBZ,EAgBiB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACFwK,4DAAA,CAAmB;AAAEhG,gBAAAA,SAAS,EAAExE,GAAG,CAACwE,SAAjB;AAA4BC,gBAAAA,GAAG,EAAEzE,GAAG,CAACyE;AAArC,eAAnB,CADE;;AAAA;AAAA;AAAA;AACrB2B,cAAAA,SADqB;AAEtBnF,cAAAA,UAFsB,GAET;AAAEkG,gBAAAA,WAAW,EAAEf,SAAS,CAACgB,UAAV,CAAqB1M,EAApC;AAAwCgO,gBAAAA,SAAS,EAAE1I,GAAG,CAAC0I;AAAvD,eAFS;AAGtB3H,cAAAA,IAHsB,GAGf;AAAE0E,gBAAAA,aAAa,EAAEzF,GAAG,CAACyF;AAArB,eAHe;AAAA;AAAA,qBAItBgF,uEAAA,CAA6BxJ,UAA7B,EAAyCF,IAAzC,CAJsB;;AAAA;AAAA;AAAA,qBAKfwJ,sFAAA,CAA6CvK,GAAG,CAACyE,GAAjD,EAAsDzE,GAAG,CAACwE,SAA1D,CALe;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAM/B,GAtBc;AAwBTqE,EAAAA,gBAxBS,4BAwBQ7I,GAxBR,EAwBa;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACEwK,4DAAA,CAAmB;AAAEhG,gBAAAA,SAAS,EAAExE,GAAG,CAACwE,SAAjB;AAA4BC,gBAAAA,GAAG,EAAEzE,GAAG,CAACyE;AAArC,eAAnB,CADF;;AAAA;AAAA;AAAA;AACjB2B,cAAAA,SADiB;AAElBnF,cAAAA,UAFkB,GAEL;AAAEkG,gBAAAA,WAAW,EAAEf,SAAS,CAACgB,UAAV,CAAqB1M,EAApC;AAAwCgO,gBAAAA,SAAS,EAAE1I,GAAG,CAAC0I;AAAvD,eAFK;AAGlBgC,cAAAA,IAHkB,GAGX,IAAIC,IAAJ,GAAWC,OAAX,EAHW;AAIxBhM,cAAAA,OAAO,CAACC,GAAR,CAAY6L,IAAZ;AACM3J,cAAAA,IALkB,GAKX;AAAEkF,gBAAAA,SAAS,EAAEjG,GAAG,CAACiG,SAAjB;AAA4BE,gBAAAA,SAAS,EAAEuE;AAAvC,eALW;AAAA;AAAA,qBAMlBD,uEAAA,CAA6BxJ,UAA7B,EAAyCF,IAAzC,CANkB;;AAAA;AAAA;AAAA,qBAOXwJ,sFAAA,CAA6CvK,GAAG,CAACyE,GAAjD,EAAsDzE,GAAG,CAACwE,SAA1D,CAPW;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQ3B,GAhCc;AAkCTsE,EAAAA,oBAlCS,gCAkCY9I,GAlCZ,EAkCiB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACFwK,4DAAA,CAAmB;AAAEhG,gBAAAA,SAAS,EAAExE,GAAG,CAACwE,SAAjB;AAA4BC,gBAAAA,GAAG,EAAEzE,GAAG,CAACyE;AAArC,eAAnB,CADE;;AAAA;AAAA;AAAA;AACrB2B,cAAAA,SADqB;AAEtBnF,cAAAA,UAFsB,GAET;AAAEkG,gBAAAA,WAAW,EAAEf,SAAS,CAACgB,UAAV,CAAqB1M,EAApC;AAAwCgO,gBAAAA,SAAS,EAAE1I,GAAG,CAAC0I;AAAvD,eAFS;AAGtB3H,cAAAA,IAHsB,GAGf;AAAEiF,gBAAAA,aAAa,EAAEhG,GAAG,CAACgG;AAArB,eAHe;AAAA;AAAA,qBAItByE,uEAAA,CAA6BxJ,UAA7B,EAAyCF,IAAzC,CAJsB;;AAAA;AAAA;AAAA,qBAKfwJ,sFAAA,CAA6CvK,GAAG,CAACyE,GAAjD,EAAsDzE,GAAG,CAACwE,SAA1D,CALe;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAM/B,GAxCc;AA0CTuE,EAAAA,gBA1CS,4BA0CQ/I,GA1CR,EA0Ca;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBiB,cAAAA,UADkB,GACL;AAAEvG,gBAAAA,EAAE,EAAEsF,GAAG,CAAC0I;AAAV,eADK;AAElB3H,cAAAA,IAFkB,GAEX;AAAE8J,gBAAAA,SAAS,EAAE7K,GAAG,CAAC6K;AAAjB,eAFW;AAAA;AAAA,qBAGlBhK,qDAAA,CAAaI,UAAb,EAAyBF,IAAzB,CAHkB;;AAAA;AAAA;AAAA,qBAIXwJ,sFAAA,CAA6CvK,GAAG,CAACyE,GAAjD,EAAsDzE,GAAG,CAACwE,SAA1D,CAJW;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK3B,GA/Cc;AAiDTmE,EAAAA,0BAjDS,sCAiDkBD,SAjDlB,EAiD6BvB,WAjD7B,EAiD0C1C,GAjD1C,EAiD+CD,SAjD/C,EAiD0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAC/DiG,mFAAA,CAAyC;AAAE/B,gBAAAA,SAAS,EAATA,SAAF;AAAavB,gBAAAA,WAAW,EAAXA;AAAb,eAAzC,CAD+D;;AAAA;AAAA;AAAA,qBAExDoD,sFAAA,CAA6C9F,GAA7C,EAAkDD,SAAlD,CAFwD;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGxE,GApDc;AAsDTiE,EAAAA,kDAtDS,8DAsD0CzI,GAtD1C,EAsD+C;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAChCwK,4DAAA,CAAmB;AAAEhG,gBAAAA,SAAS,EAAExE,GAAG,CAACwE,SAAjB;AAA4BC,gBAAAA,GAAG,EAAEzE,GAAG,CAACyE;AAArC,eAAnB,CADgC;;AAAA;AAAA;AAAA;AACnD2B,cAAAA,SADmD;;AAAA,mBAEtDA,SAFsD;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAG9BvF,2DAAA,CAAmB;AAAEsE,gBAAAA,KAAK,EAAEnF,GAAG,CAACwI;AAAb,eAAnB,EAAwC;AAC5DtD,gBAAAA,OAAO,EAAElF,GAAG,CAACkF,OAD+C;AAE5DrI,gBAAAA,IAAI,EAAEmD,GAAG,CAACnD;AAFkD,eAAxC,CAH8B;;AAAA;AAAA;AAAA;AAG/C6H,cAAAA,OAH+C;AAAA;AAAA,qBAQhD+F,6EAAA,CAAmC;AAAE/B,gBAAAA,SAAS,EAAEhE,OAAO,CAAChK,EAArB;AAAyByM,gBAAAA,WAAW,EAAEf,SAAS,CAAC1L;AAAhD,eAAnC,EAAyF;AAC3FgO,gBAAAA,SAAS,EAAEhE,OAAO,CAAChK,EADwE;AAE3FyM,gBAAAA,WAAW,EAAEf,SAAS,CAAC1L;AAFoE,eAAzF,CARgD;;AAAA;AAAA,gDAc/C0L,SAd+C;;AAAA;AAAA,gDAgB/C,IAhB+C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkB7D,GAxEc;AA0ETF,EAAAA,IA1ES,gBA0EJnF,IA1EI,EA0EE;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACayJ,4DAAA,CAAmB;AAAE/F,gBAAAA,GAAG,EAAE1D,IAAI,CAAC0D,GAAZ;AAAiBD,gBAAAA,SAAS,EAAEzD,IAAI,CAACyD;AAAjC,eAAnB,CADb;;AAAA;AAAA;AAAA;AACN4B,cAAAA,SADM;AAAA;AAAA,qBAEPqE,uEAAA,CAA6B;AAAEtD,gBAAAA,WAAW,EAAEf,SAAS,CAAC1L,EAAzB;AAA6BgO,gBAAAA,SAAS,EAAE3H,IAAI,CAAC2H;AAA7C,eAA7B,EAAuF;AAAExC,gBAAAA,IAAI,EAAEnF,IAAI,CAACmF;AAAb,eAAvF,CAFO;;AAAA;AAAA;AAAA,qBAGAqE,sFAAA,CAA6CxJ,IAAI,CAAC0D,GAAlD,EAAuD1D,IAAI,CAACyD,SAA5D,CAHA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIhB,GA9Ec;AA+ETuF,EAAAA,uBA/ES,mCA+EerP,EA/Ef,EA+EmB4O,SA/EnB,EA+E8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACnCzI,qDAAA,CAAa;AAAEyD,gBAAAA,OAAO,EAAE5J;AAAX,eAAb,EAA8B;AAAEoQ,gBAAAA,eAAe,EAAExB;AAAnB,eAA9B,CADmC;;AAAA;AAAA;AAAA,qBAE5BiB,sFAAA,CAA6CxJ,IAAI,CAAC0D,GAAlD,EAAuD1D,IAAI,CAACyD,SAA5D,CAF4B;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG5C,GAlFc;AAoFT0F,EAAAA,mBApFS,+BAoFWnJ,IApFX,EAoFiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACtBF,qDAAA,CAAa;AAAEnG,gBAAAA,EAAE,EAAEqG,IAAI,CAAC2H;AAAX,eAAb,EAAqC;AAAEuB,gBAAAA,uBAAuB,EAAElJ,IAAI,CAACkJ;AAAhC,eAArC,CADsB;;AAAA;AAAA;AAAA,qBAEfM,sFAAA,CAA6CxJ,IAAI,CAAC0D,GAAlD,EAAuD1D,IAAI,CAACyD,SAA5D,CAFe;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG/B,GAvFc;AA0FT4F,EAAAA,aA1FS,yBA0FKrJ,IA1FL,EA0FW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAChBF,qDAAA,CAAa;AAAEnG,gBAAAA,EAAE,EAAEqG,IAAI,CAAC2H;AAAX,eAAb,EAAqC;AAAEyB,gBAAAA,UAAU,EAAEpJ,IAAI,CAACoJ;AAAnB,eAArC,CADgB;;AAAA;AAAA;AAAA,qBAETI,sFAAA,CAA6CxJ,IAAI,CAAC0D,GAAlD,EAAuD1D,IAAI,CAACyD,SAA5D,CAFS;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGzB,GA7Fc;AAgGT8F,EAAAA,eAhGS,2BAgGOvJ,IAhGP,EAgGa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAClBF,qDAAA,CAAa;AAAEnG,gBAAAA,EAAE,EAAEqG,IAAI,CAACrG;AAAX,eAAb,EAA8B;AAAEmC,gBAAAA,IAAI,EAAEkE,IAAI,CAACsJ;AAAb,eAA9B,CADkB;;AAAA;AAAA;AAAA,qBAEXE,sFAAA,CAA6CxJ,IAAI,CAAC0D,GAAlD,EAAuD1D,IAAI,CAACyD,SAA5D,CAFW;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG3B;AAnGc,CAAnB;AA2GA,iEAAe7B,UAAf;;;;;;;;;;;;;;;;;;;;;;;;AChHA;AACA;;AAEA,IAAM9B,KAAK,qBACJD,iFAAY,CAACuD,+CAAD,CADR,CAAX;;AAKA,iEAAetD,KAAf;;;;;;;;;;;;;;;;ACRA;AACA;AAEA,IAAMwG,OAAO,GAAGvJ,4DAAA,CAAU,SAAV,EAAqB;AACjCwG,EAAAA,OAAO,EAAE;AACL1H,IAAAA,IAAI,EAAEO,mEADD;AAEL4N,IAAAA,MAAM,EAAE;AAFH,GADwB;AAKjC7F,EAAAA,OAAO,EAAE/H,mEALwB;AAMjC2N,EAAAA,eAAe,EAAE;AACblO,IAAAA,IAAI,EAAEO,mEADO;AAEb4I,IAAAA,YAAY,EAAE;AAFD,GANgB;AAUjCkE,EAAAA,uBAAuB,EAAE9M,mEAVQ;AAWjCgN,EAAAA,UAAU,EAAE;AACRvN,IAAAA,IAAI,EAAEO,qEADE;AAER4I,IAAAA,YAAY,EAAE;AAFN,GAXqB;AAejClJ,EAAAA,IAAI,EAAE;AACFD,IAAAA,IAAI,EAAEO,mEADJ;AAEF4I,IAAAA,YAAY,EAAE;AAFZ,GAf2B;AAmBjCZ,EAAAA,KAAK,EAAEhI,mEAnB0B;AAoBjC0N,EAAAA,SAAS,EAAE;AACPjO,IAAAA,IAAI,EAAEO,oEADC;AAEP4I,IAAAA,YAAY,EAAE;AAFP;AApBsB,CAArB,CAAhB;;AA0BAsB,OAAO,CAAC9I,SAAR,GAAoB,gBAAmB;AAAA,MAAhB6H,SAAgB,QAAhBA,SAAgB;AACnCiB,EAAAA,OAAO,CAACK,aAAR,CAAsBtB,SAAtB,EAAiC;AAAEuB,IAAAA,OAAO,EAAEjC,uEAAX;AAA6BkC,IAAAA,QAAQ,EAAE;AAAvC,GAAjC;AACH,CAFD;;AAIA,iEAAeP,OAAf;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCA;AACA;AACA;CAGA;;AACA;AAEA,IAAMxE,MAAM,GAAG5C,qDAAA,EAAf;AAGA4C,MAAM,CAACE,IAAP,CAAY,GAAZ,EAAiBzD,uEAAY;AAAA,iLAAC,iBAAOE,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACUD,GADV,CAClByD,IADkB,EACVvI,EADU,aACVA,EADU,EACN8J,SADM,aACNA,SADM,EAG1B;;AAH0B;AAAA,mBAKA7B,uDAAA,CAAe;AAAE6B,cAAAA,SAAS,EAATA;AAAF,aAAf,CALA;;AAAA;AAKpByG,YAAAA,WALoB;;AAAA,kBAMtBA,WAAW,CAACC,MAAZ,KAAuB,CAND;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAOhBvI,8DAAA,CAAsBjI,EAAtB,EAA0B;AAAE8J,cAAAA,SAAS,EAATA;AAAF,aAA1B,CAPgB;;AAAA;AAQtB/E,YAAAA,GAAG,CAACK,IAAJ,CAAS;AAAEY,cAAAA,MAAM,EAAE;AAAV,aAAT;AARsB;AAAA;;AAAA;AAUtBjB,YAAAA,GAAG,CAACK,IAAJ,CAAS;AAAEY,cAAAA,MAAM,EAAE;AAAV,aAAT;;AAVsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAA7B;AAeAmC,MAAM,CAAC7B,GAAP,CAAW,eAAX,EAA4B1B,uEAAY;AAAA,kLAAC,kBAAOE,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACpB6E,YAAAA,OADoB,GACN9E,GADM,CAC7BgH,KAD6B,CACpBlC,OADoB;AAAA;AAAA,mBAElB3B,uDAAA,CAAe;AAAE2B,cAAAA,OAAO,EAAPA;AAAF,aAAf,CAFkB;;AAAA;AAE/BvD,YAAAA,IAF+B;AAGrCtB,YAAAA,GAAG,CAACK,IAAJ,CAASiB,IAAT;;AAHqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAAxC;AAOA8B,MAAM,CAAC7B,GAAP,CAAW,oBAAX,EAAiC1B,uEAAY;AAAA,kLAAC,kBAAOE,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACzB+E,YAAAA,SADyB,GACThF,GADS,CAClCgH,KADkC,CACzBhC,SADyB;AAAA;AAAA,mBAEpB+F,8EAAA,CAAqC/F,SAArC,CAFoB;;AAAA;AAEpC2G,YAAAA,OAFoC;AAG1C1L,YAAAA,GAAG,CAACK,IAAJ,CAASqL,OAAT;;AAH0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA;AAAA;AAAA;AAAA,IAA7C;AAMA,iEAAe,UAAAlM,GAAG;AAAA,SAAIA,GAAG,CAACE,GAAJ,CAAQ,UAAR,EAAoB0D,MAApB,CAAJ;AAAA,CAAlB;;;;;;;;;;;;;;;ACvCA;AAEA,IAAMF,UAAU,GAAG;AACf3B,EAAAA,GADe,eACXC,UADW,EACC;AACZ,WAAOJ,kDAAA,CAAUI,UAAV,CAAP;AACH,GAHc;AAIfG,EAAAA,OAJe,mBAIP1G,EAJO,EAIH;AACR,WAAOmG,sDAAA,CAAcnG,EAAd,CAAP;AACH,GANc;AAOfoG,EAAAA,MAPe,kBAORC,IAPQ,EAOF;AACT,WAAOF,qDAAA,CAAaE,IAAb,CAAP;AACH,GATc;AAUfQ,EAAAA,UAVe,sBAUJ7G,EAVI,EAUAqG,IAVA,EAUM;AACjB,WAAOF,yDAAA,CAAiBnG,EAAjB,EAAqBqG,IAArB,CAAP;AACH,GAZc;AAafU,EAAAA,UAbe,sBAaJ/G,EAbI,EAaA;AACX,WAAOmG,yDAAA,CAAiBnG,EAAjB,CAAP;AACH;AAfc,CAAnB;AAmBA,iEAAeiI,UAAf;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;;AAEA,IAAM9B,KAAK,qBACJD,iFAAY,CAACuD,+CAAD,CADR,CAAX;;AAMA,iEAAetD,KAAf;;;;;;;;;;;;;;;ACTA;;AAEA,eAAoBuD,mBAAO,CAAC,4BAAD,CAA3B;AAAA,IAAOjH,SAAP,YAAOA,SAAP;;AAEA,iEAAeW,4DAAA,CAAU,SAAV,EAAqB;AAChCwG,EAAAA,OAAO,EAAEnH,SAAS,CAACoH,MADa;AAEhCC,EAAAA,SAAS,EAAErH,SAAS,CAACoH,MAFW;AAGhCY,EAAAA,KAAK,EAAEhI,SAAS,CAACoH;AAHe,CAArB,CAAf;;;;;;;;;;ACJA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMtF,GAAG,GAAGgB,8CAAO,EAAnB;AAEA;AACA;AACA;AACA;;AACA,IAAMqL,IAAI,GAAGxQ,MAAb;AACA,IAAM0Q,MAAM,GAAGJ,wDAAA,CAAkBnM,GAAlB,CAAf;AACA,IAAMmB,EAAE,GAAGgI,gDAAQ,CAACoD,MAAD,EAAS3P,+DAAT,CAAnB;AAEAmD,sEAAa,CAACC,GAAD,CAAb;AACAkB,oEAAW,CAAClB,GAAD,EAAMmB,EAAN,CAAX;AACA+H,iDAAM,CAAClJ,GAAD,EAAKmJ,kDAAL,CAAN;AAGAiD,iEAAe,CAAC,YAAM;AAClBG,EAAAA,MAAM,CAACE,MAAP,CAAcJ,IAAd,EAAoB;AAAA,WAAM1M,OAAO,CAACC,GAAR,gDAAoDyM,IAApD,EAAN;AAAA,GAApB;AACH,CAFc,CAAf;AAIAlL,EAAE,CAAC6G,EAAH,CAAM,YAAN,EAAoB,UAACD,MAAD,EAAY;AAC5BqB,EAAAA,kDAAO,CAACjI,EAAD,EAAK4G,MAAL,CAAP;AACH,CAFD,E","sources":["webpack://server/./src/application/common/utils/access.js","webpack://server/./src/application/common/utils/secret.js","webpack://server/./src/application/config/cloudinary.js","webpack://server/./src/application/config/sockets.js","webpack://server/./src/application/config/swagger.js","webpack://server/./src/application/database/index.js","webpack://server/./src/application/documentation/index.js","webpack://server/./src/application/middlewares/error-handler.js","webpack://server/./src/application/middlewares/index.js","webpack://server/./src/application/middlewares/restricted-access.js","webpack://server/./src/application/middlewares/with-sockets.js","webpack://server/./src/application/repository/generic-model.js","webpack://server/./src/application/utils/cloudinary/index.js","webpack://server/./src/entities/auth/adapters/http/index.js","webpack://server/./src/entities/auth/auth0/api.js","webpack://server/./src/entities/auth/auth0/index.js","webpack://server/./src/entities/auth/auth0/secret.js","webpack://server/./src/entities/auth/controller/index.js","webpack://server/./src/entities/auth/model/index.js","webpack://server/./src/entities/auth/model/schema.js","webpack://server/./src/entities/auth/service/index.js","webpack://server/./src/entities/classroom-student/model/index.js","webpack://server/./src/entities/classroom-student/model/schema.js","webpack://server/./src/entities/classroom/adapters/http/index.js","webpack://server/./src/entities/classroom/adapters/socket/index.js","webpack://server/./src/entities/classroom/controller/index.js","webpack://server/./src/entities/classroom/model/index.js","webpack://server/./src/entities/classroom/model/schema.js","webpack://server/./src/entities/index.js","webpack://server/./src/entities/student/adapters/http/index.js","webpack://server/./src/entities/student/adapters/socket/index.js","webpack://server/./src/entities/student/controller/index.js","webpack://server/./src/entities/student/model/index.js","webpack://server/./src/entities/student/model/schema.js","webpack://server/./src/entities/teacher/adapters/http/index.js","webpack://server/./src/entities/teacher/controller/index.js","webpack://server/./src/entities/teacher/model/index.js","webpack://server/./src/entities/teacher/model/schema.js","webpack://server/external commonjs \"@babel/runtime/helpers/asyncToGenerator\"","webpack://server/external commonjs \"@babel/runtime/helpers/defineProperty\"","webpack://server/external commonjs \"@babel/runtime/helpers/slicedToArray\"","webpack://server/external commonjs \"@babel/runtime/regenerator\"","webpack://server/external commonjs \"auth0\"","webpack://server/external commonjs \"cloudinary\"","webpack://server/external commonjs \"cors\"","webpack://server/external commonjs \"express\"","webpack://server/external commonjs \"jsonwebtoken\"","webpack://server/external commonjs \"jwks-rsa\"","webpack://server/external commonjs \"multer\"","webpack://server/external commonjs \"sequelize\"","webpack://server/external commonjs \"socket.io\"","webpack://server/external commonjs \"swagger-jsdoc\"","webpack://server/external commonjs \"swagger-ui-express\"","webpack://server/external node-commonjs \"http\"","webpack://server/external node-commonjs \"path\"","webpack://server/webpack/bootstrap","webpack://server/webpack/runtime/compat get default export","webpack://server/webpack/runtime/define property getters","webpack://server/webpack/runtime/hasOwnProperty shorthand","webpack://server/webpack/runtime/make namespace object","webpack://server/./src/index.js"],"sourcesContent":["import jwt from 'jsonwebtoken';\nimport { getKey } from './secret';\n\nexport const verifyToken = token => new Promise(((resolve, reject) => {\n    jwt.verify(token, getKey, (err, decoded) => err || !decoded\n        ? reject(err)\n        : resolve({ ...decoded, id: decoded.sub || decoded.id }));\n}));\n\n","import jwksClient from 'jwks-rsa';\r\n\r\nconst { JWKS_URI } = process.env;\r\n\r\nconst client = jwksClient({ jwksUri: String(JWKS_URI) });\r\n\r\nexport const getKey = (header, callback) => {\r\n    client.getSigningKey(header.kid, (err, key) => {\r\n        if (err) return callback(err);\r\n        const signingKey = key.getPublicKey();\r\n        callback(err, signingKey);\r\n    });\r\n};\r\n","export const  cloud_name = 'da4rcdlvw';\r\nexport const api_key = '569129219998658';\r\nexport const  api_secret = 'oUUuJqnI8GAU_zrQzcVGgR7XbS8';","\r\nexport const config = {\r\n    cors: {\r\n        origin: \"*\",\r\n        methods: [\"GET\", \"POST\"],\r\n        credentials: true\r\n    },\r\n    allowEIO3: true\r\n};","export const swaggerConfig = {\n  definition: {\n    openapi: '3.0.0',\n    info: {\n      title: 'Test API',\n      version: '1.0.0',\n    },\n    components: {\n      securitySchemes: {\n        ApiKeyAuth: {\n          type: 'apiKey',\n          name: 'x-access-token',\n          in: 'header',\n        },\n      },\n    },\n    security: [\n      { ApiKeyAuth: [] },\n    ],\n    securityDefinitions: {\n      basicAuth: {\n        type: 'basic'\n      },\n    },\n  },\n  // Path to the API docs\n  apis: ['./src/entities/**/*.js', './src/entities/**/*.yml'],\n};\n\n","import { Sequelize, DataTypes } from 'sequelize';\r\n\r\nconst database = process.env.DB_NAME;\r\nconst user = process.env.DB_USER;\r\nconst password = process.env.DB_PASSWORD;\r\nconst host = process.env.DB_HOST;\r\nconst forceCleanDatabase = process.env.DB_FORCE_CLEAN === 'true';\r\n\r\nexport const db = new Sequelize(database, user, password, {\r\n\thost,\r\n\tdialect: 'mysql',\r\n\tlogging: false,\r\n});\r\n\r\nexport {DataTypes};\r\nexport const setAssociations = (db) => {\r\n\tObject.keys(db.models).forEach((modelName) => {\r\n\t\tif ('associate' in db.models[modelName]) {\r\n\t\t\tdb.models[modelName].associate(db.models);\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport default async (onConnect) => {\r\n\ttry {\r\n\t\tawait setAssociations(db);\r\n\t\tawait db.authenticate();\r\n\t\tawait db.sync({ force: forceCleanDatabase });\r\n\t\tonConnect();\r\n\t\tconsole.log('Database connection OK!');\r\n\t} catch (error) {\r\n\t\tconsole.log(error)\r\n\t\tconsole.log('Unable to connect to the database:');\r\n\t}\r\n}","import swaggerJSDoc from \"swagger-jsdoc\";\nimport swaggerUi from \"swagger-ui-express\";\nimport { swaggerConfig } from \"../config/swagger\";\n\nconst Documentation = (app) => {\n  // JSON of specs\n  const swaggerSpec = swaggerJSDoc(swaggerConfig);\n\n  // Api entrypoint\n  app.use(\"/docs\", swaggerUi.serve, swaggerUi.setup(swaggerSpec));\n};\n\nexport default Documentation;\n","/*Tenemos una función que recibe como parámetro la función de cada controlador,\nla ejecuta (resolve)\ny si  hay algún error, lo mostrará por consola y lanzará un 500\n*/\n\nexport const asyncHandler = controller => (req, res, next) => Promise\n  .resolve(controller(req, res, next))\n  .catch((err) => {\n    console.error('Request error:' + err.toString());\n    if (err) return res.sendStatus(500).send();\n});\n \nexport const socketHandler = controller => msg => Promise\n  .resolve(controller(msg))\n  .catch((err) => {\n    console.error('Socket error:' + err);\n});","import express from 'express';\nimport cors from 'cors';\nimport withSockets from './with-sockets';\n\nconst Middlewares = (app, io) => {\n    app.use(express.urlencoded({extended: true}));\n    app.use(express.json());\n    app.use(withSockets(io));\n    app.use(cors());\n};\n\nexport default Middlewares;","import { verifyToken } from '@Application/common/utils/access';\nexport const getHeader = (req, header) => req.headers[header];\n\nexport default async (req, res, next) => {\n  const token = getHeader(req, 'authorization');\n\n  if (!token) {\n    return res.status(400).send('No token provided.');\n  }\n  try {\n    const { id } = await verifyToken(token);\n    if (!id) {\n      return res.status(403).send('Wrong credentials');\n    }\n    req.userId = id;\n    return next();\n  } catch (err) {\n    return res.status(401).send('Failed to authenticate token.');\n  }\n}","const withSockets = io => (req, res, next) => {\r\n    req.io = io;\r\n    return next();\r\n};\r\n\r\nexport default withSockets;\r\n","const GenericModel = Model => ({\r\n    create(data) {\r\n        return Model.create(data);\r\n    },\r\n    get(conditions) {\r\n        return Model.findAll(conditions ? {where:conditions } : {});\r\n    },\r\n    getById(id) {\r\n        return Model.findOne({ where: { id } , raw:true});\r\n    },\r\n    updateById(id, data) {\r\n        return Model.update(data, { where: { id } });\r\n    },\r\n    update(conditions, data) {\r\n        return Model.update(data, { where: conditions });\r\n    },\r\n    deleteById(id) {\r\n        return Model.destroy({ where: { id } });\r\n    },\r\n    deleteByConditions(conditions) {\r\n        return Model.destroy({ where: conditions });\r\n    },\r\n    findOrCreate(condition, newObj){\r\n        return Model.findOrCreate({where:condition, defaults: newObj});\r\n    }\r\n\r\n});\r\n\r\nexport default GenericModel;\r\n","import Cloudinary from 'cloudinary';\r\nimport {cloud_name, api_key, api_secret} from '../../../application/config/cloudinary';\r\n\r\nconst {uploader, config} = Cloudinary.v2;\r\n\r\nconfig({cloud_name, api_key, api_secret});\r\n\r\nexport const uploadStream = (fileBuffer, options) => new Promise((resolve, reject) => {\r\n    uploader.upload_stream(options, (error, result) => {\r\n        if (error) {\r\n            reject(error);\r\n        } else {\r\n            resolve(result);\r\n        }\r\n    }).end(fileBuffer);\r\n});\r\n\r\nexport const removeFile = public_id => new Promise((resolve, reject) => uploader.destroy(public_id, (err) => {\r\n    if (err) {\r\n        reject(err);\r\n    } else {\r\n        resolve();\r\n    }\r\n}));","import express from 'express';\r\nimport Controller from \"../../controller\";\r\nimport {asyncHandler} from \"@Middlwares/error-handler\";\r\n// Para operaciones con acceso restringido, introduciremos un segundo parámetro que será la variable restrictedAccess\r\nimport restrictedAccess from \"@Middlwares/restricted-access\";\r\n\r\nconst router = express.Router();\r\n\r\n// GET ALL\r\nrouter.post('/login', asyncHandler(async (req, res) => {\r\n\r\n    const data = await Controller.login(req.body.token, req.body.isTeacher);\r\n    res.send(data);\r\n}));\r\n\r\n\r\nexport default app => app.use('/auth', router);","import auth0 from 'auth0';\r\n\r\nconst config = {\r\n    domain: process.env.AUTH0_DOMAIN,\r\n    clientId: process.env.AUTH0_CLIENT_ID,\r\n    clientSecret: process.env.AUTH0_SECRET,\r\n    audience: process.env.AUTH0_AUDIENCE,\r\n};\r\n\r\nexport const getManagementApi = () => new auth0.ManagementClient(config);\r\n\r\nexport const getAuthenticationApi = () => new auth0.AuthenticationClient(config);","import jwt from 'jsonwebtoken';\r\nimport { getKey } from './secret';\r\nimport { getManagementApi, getAuthenticationApi } from './api';\r\n\r\nexport const verifyAuthToken = token => new Promise(((resolve, reject) => {\r\n    jwt.verify(token, getKey, (err, decoded) => err || !decoded\r\n        ? reject(err)\r\n        : resolve({ ...decoded, id: decoded.sub || decoded.id }));\r\n}));\r\n\r\nexport const ManagementClient = getManagementApi();\r\nexport const AuthenticationClient = getAuthenticationApi();","import jwksClient from 'jwks-rsa';\r\n\r\nconst { JWKS_URI } = process.env;\r\n\r\nconst client = jwksClient({ jwksUri: String(JWKS_URI) });\r\n\r\nexport const getKey = (header, callback) => {\r\n    client.getSigningKey(header.kid, (err, key) => {\r\n        if (err) return callback(err);\r\n        const signingKey = key.getPublicKey();\r\n        callback(err, signingKey);\r\n    });\r\n};\r\n","import Model from \"../model\";\nimport Service from '../service';\n\nconst Controller = {\n    login(token, isTeacher) {\n        return Service().signIn(token, isTeacher);\n    }\n}\n\nexport default Controller;\n","import Schema from './schema';\nimport GenericModel from '@Application/repository/generic-model';\n\nconst Model = {\n    ...GenericModel(Schema),\n};\n\n\nexport default Model;\n","import { db } from '@Application/database';\r\nconst { DataTypes } = require('sequelize');\r\n\r\nexport default db.define('user', {\r\n\tauth0Id: DataTypes.STRING,\r\n\tteacherId: DataTypes.STRING,\r\n\tcod: DataTypes.STRING,\r\n\tstudent: DataTypes.BOOLEAN\r\n});\r\n\r\n","import { ManagementClient, verifyAuthToken } from '../auth0';\r\nimport StudentModel from '../../student/model';\r\nimport TeacherModel from '../../teacher/model';\r\n\r\n\r\nconst AuthService = () => ({\r\n    async signIn(providerToken, isTeacher) {\r\n        const { id, email_verified, given_name, picture, email } = await verifyAuthToken(providerToken);\r\n        const rqr = await verifyAuthToken(providerToken);\r\n        const Model = isTeacher ? TeacherModel : StudentModel\r\n        const user = await Model.findOrCreate({ email }, { auth0Id: id, name: given_name, picture });\r\n        return { user, verified: email_verified };\r\n    },\r\n    deleteUser(userProviderId) {\r\n        return ManagementClient.deleteUser({ id: userProviderId });\r\n    },\r\n});\r\n\r\nexport default AuthService;","import Schema from './schema';\nimport GenericModel from '@Application/repository/generic-model';\n\nconst Model = {\n    ...GenericModel(Schema),\n    updateHasTerminated(conditions, hasTerminated){\n        return Schema.update({hasTerminated},{where:conditions});\n    }\n};\n\nexport default Model;\n\n","import { db, DataTypes } from '@Application/database';\r\n\r\nconst ClassroomStudent = db.define('classroomstudent', {\r\n    id: {\r\n        type: DataTypes.INTEGER,\r\n        primaryKey: true,\r\n        autoIncrement: true,\r\n        allowNull: false,\r\n    },\r\n    hasTerminated: {\r\n        type: DataTypes.BOOLEAN,\r\n        defaultValue: false\r\n    },\r\n    isInClassroom: {\r\n        type: DataTypes.BOOLEAN,\r\n        defaultValue: true\r\n    },\r\n    hasDoubts: {\r\n        type: DataTypes.BOOLEAN,\r\n        defaultValue: false\r\n    },\r\n    doIt: {\r\n        type: DataTypes.BOOLEAN,\r\n        defaultValue: false\r\n    },\r\n    doubtTime: DataTypes.INTEGER\r\n\r\n});\r\n\r\nClassroomStudent.associate = ({ classroom, student }) => {\r\n    ClassroomStudent.belongsTo(classroom, { foreignKey: { allowNull: false } });\r\n    ClassroomStudent.belongsTo(student, { foreignKey: { allowNull: false } });\r\n};\r\n\r\nexport default ClassroomStudent;","import express from 'express';\r\nimport Controller from '../../controller';\r\nimport {asyncHandler} from \"@Middlwares/error-handler\";\r\n// Para operaciones con acceso restringido, introduciremos un segundo parámetro que será la variable restrictedAccess\r\nimport restrictedAccess from \"@Middlwares/restricted-access\";\r\n\r\nconst router = express.Router();\r\n/*\r\n// GET BY ID\r\nrouter.get('/:id', asyncHandler(async (req, res) => {\r\n    const {query: {id}} = req;\r\n    const data = await Controller.getById(id);\r\n    res.send(data);\r\n}));\r\n\r\n// GET BY CONDITIONS\r\nrouter.get('/:teacherId/:cod', asyncHandler(async (req, res) => {\r\n    const {params: {teacherId, cod}} = req;\r\n    const data = await Controller.get({teacherId, cod});\r\n    res.send(data);\r\n}));\r\n*/\r\n// CREATE\r\nrouter.post(\"/\", asyncHandler(async (req, res) => {\r\n    const {body: {teacherId, cod}} = req;\r\n    const data = await Controller.createIfNotExistsAndGetClassroom(teacherId, cod);\r\n    res.send(data);\r\n}));\r\n\r\nrouter.get(\"/getClassroom\", asyncHandler(async (req, res) => {\r\n    const {query: {cod, teacherId}} = req;\r\n    const classroom = await Controller.getClassroomWithStudents(cod, teacherId);\r\n    res.send(classroom);\r\n}));\r\n\r\nrouter.post(\"/updateTxt\", asyncHandler(async (req, res) => {\r\n    const {body: {cod, teacherId, txt}} = req;\r\n    const classroom = await Controller.updateTxt(cod, teacherId,txt);\r\n    req.io.emit('classroomUpdated', classroom);\r\n}));\r\n\r\nrouter.post(\"/newExercise\", asyncHandler(async (req, res) => {\r\n    const {body: {cod, teacherId}} = req;\r\n    const updatedClassroom = await Controller.newExercise(cod, teacherId);\r\n    req.io.emit('classroomUpdated', updatedClassroom);\r\n\r\n   // await Controller.\r\n//    const classroom = await Controller.newExercise(cod, teacherId);\r\n //   req.io.emit('newExercise', classroom);\r\n}));\r\n\r\n\r\nexport default app => app.use('/classroom', router);","import {socketHandler} from '@Middlwares/error-handler';\r\nimport Controller from '../../controller';\r\n\r\nconst StartSocketServer = (io, socket) => {\r\n    socket.on('studentSuscribeOrLogInClassroom', socketHandler(async (msg) => {\r\n        io.emit('studentSuscribeOrLogInClassroom', msg);\r\n    }));\r\n};\r\n\r\nexport default StartSocketServer;\r\n","import Model from \"../model\";\nimport ClassroomStudent from \"../../classroom-student/model\";\n\nconst Controller = {\n    get(conditions) {\n        return Model.get(conditions);\n    },\n    getById(id) {\n        return Model.getById(id);\n    },\n    create(data) {\n        return Model.create(data);\n    },\n    updateById(id, data) {\n        return Model.updateById(id, data);\n    },\n    deleteById(id) {\n        return Model.deleteById(id);\n    },\n    getMostRecentCod(teacherId) {\n        return Model.getMostRecentCod(teacherId);\n    },\n    async getClassroomWithStudents(cod, teacherId) {\n        const classroom = await Model.getClassroomWithStudents({ cod, teacherId });\n        return classroom;\n    },\n    async createIfNotExistsAndGetClassroom(teacherId, cod) {\n        const data = await this.getClassroomWithStudents(teacherId, cod);\n        if (!data) {\n            await Model.create({ teacherId, cod });\n            return await this.getClassroomWithStudents(teacherId, cod);\n        }\n        return data;\n    },\n    async updateTxt(cod, teacherId, txt) {\n        const [classroom] = await Model.get({ cod, teacherId });\n        await Model.updateById(classroom.id, { txt });\n        return await Model.getClassroomWithStudents({ cod, teacherId });\n    },\n    async newExercise(cod, teacherId) {\n        const [classroom] = await Model.get({ cod, teacherId });\n        await ClassroomStudent.update({ classroomId: classroom.dataValues.id }, { hasTerminated: false, doIt: false, hasDoubts: false });\n        return await Model.getClassroomWithStudents({ cod, teacherId });\n    },\n}\n\nexport default Controller;\n","import Schema from './schema';\nimport GenericModel from '@Application/repository/generic-model';\nimport Student from '../../student/model/schema';\nimport ClassroomStudent from \"../../classroom-student/model/schema\";\n\nconst Model = {\n    ...GenericModel(Schema),\n    getClassroomWithStudents(conditions){\n        return Schema.findOne({where:conditions,include: Student});\n    },\n    getMostRecentCod(teacherId) {\n        return Schema.findOne({ where: { teacherId },    order: [ [ 'createdAt', 'DESC' ]],\n        });\n    },\n};\n\nexport default Model;\n\n","import {db, DataTypes} from '@Application/database'\r\nimport ClassroomStudent from \"../../classroom-student/model/schema\";\r\n\r\nconst Classroom = db.define('classroom', {\r\n    teacherId: DataTypes.STRING,\r\n    cod: DataTypes.STRING,\r\n    txt: {\r\n        type:DataTypes.STRING,\r\n        defaultValue:''\r\n    }\r\n});\r\n\r\nClassroom.associate = ({student, classroomstudent}) => {\r\n    Classroom.belongsToMany(student, {through: ClassroomStudent, onDelete: 'cascade'});\r\n    // Classroom.hasMany(classroomstudent, { onDelete: 'cascade'});\r\n};\r\n\r\n\r\nexport default Classroom;","import studentRoutes from './student/adapters/http';\nimport studentSockets from './student/adapters/socket';\nimport teacherRoutes from './teacher/adapters/http';\n//import teacherSockets from './teacher/adapters/socket';\nimport classRoomRoutes from './classroom/adapters/http';\nimport classRoomSockets from './classroom/adapters/socket';\nimport authRoutes from './auth/adapters/http';\n\nexport const Routes = (app,socketIO) => {\n    studentRoutes(app,socketIO);\n    teacherRoutes(app);\n    classRoomRoutes(app);\n    authRoutes(app);\n}\n\nexport const Sockets = (io, socket) => {\n    studentSockets(io, socket);\n    //teacherSockets(io, socket);\n  //  classRoomSockets(io, socket);\n}","import express from 'express';\r\nimport Controller from \"../../controller\";\r\nimport { asyncHandler } from \"@Middlwares/error-handler\";\r\nimport multer from \"multer\";\r\nimport path from \"path\";\r\nimport { uploadStream } from '../../../../application/utils/cloudinary';\r\n\r\n// Para operaciones con acceso restringido, introduciremos un segundo parámetro que será la variable restrictedAccess\r\nimport restrictedAccess from \"@Middlwares/restricted-access\";\r\n\r\n\r\nconst router = express.Router();\r\n\r\nrouter.post(\"/\", asyncHandler(async (req, res) => {\r\n    const { body: { teacherId, mail, cod, picture, name } } = req;\r\n    const data = await Controller.getStudentClassroomAndSuscribeToItIfIsNotSuscribed({\r\n        teacherId,\r\n        mail,\r\n        cod,\r\n        picture,\r\n        name\r\n    })\r\n\r\n    res.send(data);\r\n}));\r\n\r\nrouter.post(\"/removeFromClassroom\", asyncHandler(async (req, res) => {\r\n    const { body: { studentId, classroomId, cod, teacherId } } = req;\r\n    await Controller.removeStudentFromClassroom(studentId, classroomId, cod, teacherId);\r\n    const updatedClassroom = await Controller.studentHasTerminated(req.body);\r\n    req.io.emit('classroomUpdated', updatedClassroom);\r\n}));\r\n\r\n\r\nrouter.post(\"/hasTerminated\", asyncHandler(async (req, res) => {\r\n    const updatedClassroom = await Controller.studentHasTerminated(req.body);\r\n    req.io.emit('classroomUpdated', updatedClassroom);\r\n    res.send(200);\r\n}));\r\n\r\nrouter.post(\"/hasDoubts\", asyncHandler(async (req, res) => {\r\n    const updatedClassroom = await Controller.studentHasDoubts(req.body);\r\n    updatedClassroom.dataValues.hasDoubts = req.body.hasDoubts;\r\n    req.io.emit('classroomUpdated', updatedClassroom);\r\n    res.send(200);\r\n}));\r\n\r\nrouter.post(\"/isInClassroom\", asyncHandler(async (req, res) => {\r\n    const updatedClassroom = await Controller.studentIsInClassroom(req.body);\r\n    req.io.emit('classroomUpdated', updatedClassroom);\r\n    res.send(200);\r\n}));\r\n\r\nrouter.post(\"/isBlocked\", asyncHandler(async (req, res) => {\r\n    const updatedClassroom = await Controller.studentIsBlocked(req.body);\r\n    req.io.emit('classroomUpdated', updatedClassroom);\r\n    res.send(200);\r\n}));\r\n\r\nrouter.post(\"/doit\", asyncHandler(async (req, res) => {\r\n    const updatedClassroom = await Controller.doIt(req.body);\r\n    req.io.emit('classroomUpdated', updatedClassroom);\r\n    res.send(200);\r\n}));\r\n\r\n\r\n// Multer debe usarse como middleware\r\nconst storage2 = multer.diskStorage({\r\n    destination: \"./public/uploads/\",\r\n    filename: function (req, file, cb) {\r\n        const imageName = \"image-\" + req.userId + path.extname(file.originalname);\r\n        cb(null, imageName);\r\n    }\r\n});\r\n\r\nconst storage = multer.memoryStorage({\r\n    destination: \"./public/uploads/\",\r\n});\r\nconst upload = multer({ storage })\r\n\r\n\r\nrouter.post('/uploadavatar', upload.single('file'), asyncHandler(async (req, res) => {\r\n    const auth0Id = req.body.auth0Id;\r\n\r\n    if (req.file) {\r\n        const result = await uploadStream(req.file.buffer, { folder: 'termine' });\r\n        const updatedClassroom = await Controller.insertImageIntoDatabase(auth0Id, result.secure_url);\r\n        req.io.emit('classroomUpdated', updatedClassroom);\r\n    }\r\n    res.send(200);\r\n}));\r\n\r\nrouter.post('/monteserinAvatar', asyncHandler(async (req, res) => {\r\n    const { body: { cod, teacherId, studentId, monteserinAvatarPicture } } = req;\r\n    const updatedClassroom = await Controller.setMonteserinAvatar({ cod, teacherId, studentId, monteserinAvatarPicture });\r\n    req.io.emit('classroomUpdated', updatedClassroom);\r\n    res.send(200);\r\n}));\r\n\r\n\r\n\r\n\r\nrouter.post('/setAvatarType', asyncHandler(async (req, res) => {\r\n    const { body: { avatarType, studentId, cod, teacherId } } = req;\r\n    const updatedClassroom = await Controller.setAvatarType({ avatarType, studentId, cod, teacherId });\r\n    req.io.emit('classroomUpdated', updatedClassroom);\r\n    res.send(200);\r\n}));\r\n\r\nrouter.post('/saveStudentName', asyncHandler(async (req, res) => {\r\n    const { body: { id, studentName, cod, teacherId } } = req;\r\n    const updatedClassroom = await Controller.saveStudentName({ id, studentName, cod, teacherId });\r\n    req.io.emit('classroomUpdated', updatedClassroom);\r\n    res.send(200);\r\n}));\r\n\r\n\r\nexport default app => app.use('/student', router);","import {socketHandler} from '@Middlwares/error-handler';\r\nimport Controller from '../../controller';\r\nimport ClassroomController from '../../../classroom/controller';\r\n\r\nconst StartSocketServer = (io, socket) => {\r\n    socket.on('studentSuscribeOrLogInClassroom', socketHandler(async (msg) => {\r\n        const classroom = await Controller.getStudentClassroomAndSuscribeToItIfIsNotSuscribed(msg);\r\n        io.emit('classroomStudents', classroom);\r\n    }));\r\n\r\n\r\n    socket.on('studentHasDoubts', socketHandler(async (msg) => {\r\n        const updatedClassroom  =await Controller.studentHasDoubts(msg);\r\n        io.emit('studentHasTerminated', updatedClassroom);\r\n    }));\r\n\r\n    socket.on('studentsUpdated',socketHandler(async (msg) => {\r\n        const updatedClassroom = await ClassroomController.getClassroomWithStudents(msg.cod, msg.teacherId);\r\n        io.emit('classroomUpdated', updatedClassroom);\r\n    }))\r\n};\r\n\r\nexport default StartSocketServer;\r\n","import Model from \"../model\";\nimport ClassroomModel from '../../classroom/model';\nimport ClassroomStudentModel from '../../classroom-student/model';\nimport ClassroomController from \"../../classroom/controller\";\n\nconst Controller = {\n    get(conditions) {\n        return Model.get(conditions);\n    },\n    getById(id) {\n        return Model.getById(id);\n    },\n    create(data) {\n        return Model.create(data);\n    },\n    updateById(id, data) {\n        return Model.updateById(id, data);\n    },\n    deleteById(id) {\n        return Model.deleteById(id);\n    },\n    async studentHasTerminated(msg) {\n        const [classroom] = await ClassroomModel.get({ teacherId: msg.teacherId, cod: msg.cod });\n        const conditions = { classroomId: classroom.dataValues.id, studentId: msg.studentId };\n        const data = { hasTerminated: msg.hasTerminated };\n        await ClassroomStudentModel.update(conditions, data);\n        return await ClassroomController.getClassroomWithStudents(msg.cod, msg.teacherId);\n    },\n\n    async studentHasDoubts(msg) {\n        const [classroom] = await ClassroomModel.get({ teacherId: msg.teacherId, cod: msg.cod });\n        const conditions = { classroomId: classroom.dataValues.id, studentId: msg.studentId };\n        const time = new Date().getTime();\n        console.log(time)\n        const data = { hasDoubts: msg.hasDoubts, doubtTime: time };\n        await ClassroomStudentModel.update(conditions, data);\n        return await ClassroomController.getClassroomWithStudents(msg.cod, msg.teacherId);\n    },\n\n    async studentIsInClassroom(msg) {\n        const [classroom] = await ClassroomModel.get({ teacherId: msg.teacherId, cod: msg.cod });\n        const conditions = { classroomId: classroom.dataValues.id, studentId: msg.studentId };\n        const data = { isInClassroom: msg.isInClassroom };\n        await ClassroomStudentModel.update(conditions, data);\n        return await ClassroomController.getClassroomWithStudents(msg.cod, msg.teacherId);\n    },\n\n    async studentIsBlocked(msg) {\n        const conditions = { id: msg.studentId };\n        const data = { isBlocked: msg.isBlocked };\n        await Model.update(conditions, data);\n        return await ClassroomController.getClassroomWithStudents(msg.cod, msg.teacherId);\n    },\n\n    async removeStudentFromClassroom(studentId, classroomId, cod, teacherId) {\n        await ClassroomStudentModel.deleteByConditions({ studentId, classroomId })\n        return await ClassroomController.getClassroomWithStudents(cod, teacherId);\n    },\n\n    async getStudentClassroomAndSuscribeToItIfIsNotSuscribed(msg) {\n        const [classroom] = await ClassroomModel.get({ teacherId: msg.teacherId, cod: msg.cod });\n        if (classroom) {\n            const [student] = await Model.findOrCreate({ email: msg.mail }, {\n                picture: msg.picture,\n                name: msg.name\n            });\n\n            await ClassroomStudentModel.findOrCreate({ studentId: student.id, classroomId: classroom.id }, {\n                studentId: student.id,\n                classroomId: classroom.id\n            });\n\n\n            return classroom;\n        } else {\n            return null;\n        }\n    },\n\n    async doIt(data) {\n        const [classroom] = await ClassroomModel.get({ cod: data.cod, teacherId: data.teacherId });\n        await ClassroomStudentModel.update({ classroomId: classroom.id, studentId: data.studentId }, { doIt: data.doIt });\n        return await ClassroomController.getClassroomWithStudents(data.cod, data.teacherId);\n    },\n    async insertImageIntoDatabase(id, imageName) {\n        await Model.update({ auth0Id: id }, { uploadedPicture: imageName });\n        return await ClassroomController.getClassroomWithStudents(data.cod, data.teacherId);\n    },\n\n    async setMonteserinAvatar(data) {\n        await Model.update({ id: data.studentId }, { monteserinAvatarPicture: data.monteserinAvatarPicture });\n        return await ClassroomController.getClassroomWithStudents(data.cod, data.teacherId);\n    },\n\n\n    async setAvatarType(data) {\n        await Model.update({ id: data.studentId }, { avatarType: data.avatarType });\n        return await ClassroomController.getClassroomWithStudents(data.cod, data.teacherId);\n    },\n\n\n    async saveStudentName(data) {\n        await Model.update({ id: data.id }, { name: data.studentName });\n        return await ClassroomController.getClassroomWithStudents(data.cod, data.teacherId);\n    },\n\n\n\n\n\n}\n\nexport default Controller;\n","import Schema from './schema';\nimport GenericModel from '@Application/repository/generic-model';\n\nconst Model = {\n    ...GenericModel(Schema),\n};\n\n\nexport default Model;\n","import { db, DataTypes } from '@Application/database';\r\nimport ClassroomStudent from \"../../classroom-student/model/schema\";\r\n\r\nconst Student = db.define('student', {\r\n    auth0Id: {\r\n        type: DataTypes.STRING,\r\n        unique: true\r\n    },\r\n    picture: DataTypes.STRING,\r\n    uploadedPicture: {\r\n        type: DataTypes.STRING,\r\n        defaultValue: 'https://pablomonteserin.com/termine/defaultAvatar.png'\r\n    },\r\n    monteserinAvatarPicture: DataTypes.STRING,\r\n    avatarType: {\r\n        type: DataTypes.SMALLINT,\r\n        defaultValue: 1\r\n    },\r\n    name: {\r\n        type: DataTypes.STRING,\r\n        defaultValue: ''\r\n    },\r\n    email: DataTypes.STRING,\r\n    isBlocked: {\r\n        type: DataTypes.BOOLEAN,\r\n        defaultValue: false\r\n    },\r\n});\r\n\r\nStudent.associate = ({ classroom }) => {\r\n    Student.belongsToMany(classroom, { through: ClassroomStudent, onDelete: 'cascade' });\r\n};\r\n\r\nexport default Student;","import express from 'express';\r\nimport Controller from \"../../controller\";\r\nimport ClassroomController from \"../../../classroom/controller\";\r\n\r\nimport { asyncHandler } from \"@Middlwares/error-handler\";\r\n// Para operaciones con acceso restringido, introduciremos un segundo parámetro que será la variable restrictedAccess\r\nimport restrictedAccess from \"@Middlwares/restricted-access\";\r\n\r\nconst router = express.Router();\r\n\r\n\r\nrouter.post(\"/\", asyncHandler(async (req, res) => {\r\n    const { body: { id, teacherId } } = req;\r\n\r\n    // Compruebo si algún profe tiene ese teacherId\r\n\r\n    const teacherData = await Controller.get({ teacherId });\r\n    if (teacherData.length === 0) {\r\n        await Controller.updateById(id, { teacherId });\r\n        res.send({ status: 'teacher created' });\r\n    } else {\r\n        res.send({ status: 'Another teacher has this teacherId' });\r\n    }\r\n}));\r\n\r\n\r\nrouter.get(\"/getTeacherId\", asyncHandler(async (req, res) => {\r\n    const { query: { auth0Id } } = req;\r\n    const data = await Controller.get({ auth0Id });\r\n    res.send(data);\r\n}));\r\n\r\n\r\nrouter.get(\"/getLastTeacherCod\", asyncHandler(async (req, res) => {\r\n    const { query: { teacherId } } = req;\r\n    const lastCod = await ClassroomController.getMostRecentCod(teacherId)\r\n    res.send(lastCod);\r\n}));\r\n\r\nexport default app => app.use('/teacher', router);","import Model from \"../model\";\n\nconst Controller = {\n    get(conditions) {\n        return Model.get(conditions);\n    },\n    getById(id) {\n        return Model.getById(id);\n    },\n    create(data) {\n        return Model.create(data);\n    },\n    updateById(id, data) {\n        return Model.updateById(id, data);\n    },\n    deleteById(id) {\n        return Model.deleteById(id);\n    },\n\n}\n\nexport default Controller;\n","import Schema from './schema';\nimport GenericModel from '@Application/repository/generic-model';\n\nconst Model = {\n    ...GenericModel(Schema),\n\n};\n\n\nexport default Model;\n","import {db} from '@Application/database';\r\n\r\nconst {DataTypes} = require('sequelize');\r\n\r\nexport default db.define('teacher', {\r\n    auth0Id: DataTypes.STRING,\r\n    teacherId: DataTypes.STRING,\r\n    email: DataTypes.STRING,\r\n});\r\n\r\n","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"auth0\");","module.exports = require(\"cloudinary\");","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"jwks-rsa\");","module.exports = require(\"multer\");","module.exports = require(\"sequelize\");","module.exports = require(\"socket.io\");","module.exports = require(\"swagger-jsdoc\");","module.exports = require(\"swagger-ui-express\");","module.exports = require(\"http\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import express from 'express';\nimport http from 'http';\nimport socketIO from 'socket.io';\nimport { config } from '@Application/config/sockets';\nimport Middlewares from './application/middlewares';\nimport { Routes, Sockets } from './entities';\nimport Documentation from './application/documentation';\nimport ConnectDatabase from './application/database';\n\nconst app = express();\n\n/*\nHeroku utiliza la variable de entorno process.env.port para asignar el puerto donde se va ejecutar el servidor,\npor eso la hemos definido en esta plantilla\n*/\nconst port = process.env.PORT;\nconst server = http.createServer(app);\nconst io = socketIO(server, config);\n\nDocumentation(app);\nMiddlewares(app, io);\nRoutes(app,socketIO);\n\n\nConnectDatabase(() => {\n    server.listen(port, () => console.log(`Server listening to http://localhost:${port}`));\n});\n\nio.on('connection', (socket) => {\n    Sockets(io, socket);\n});"],"names":["jwt","getKey","verifyToken","token","Promise","resolve","reject","verify","err","decoded","id","sub","jwksClient","JWKS_URI","process","env","client","jwksUri","String","header","callback","getSigningKey","kid","key","signingKey","getPublicKey","cloud_name","api_key","api_secret","config","cors","origin","methods","credentials","allowEIO3","swaggerConfig","definition","openapi","info","title","version","components","securitySchemes","ApiKeyAuth","type","name","security","securityDefinitions","basicAuth","apis","Sequelize","DataTypes","database","DB_NAME","user","DB_USER","password","DB_PASSWORD","host","DB_HOST","forceCleanDatabase","DB_FORCE_CLEAN","db","dialect","logging","setAssociations","Object","keys","models","forEach","modelName","associate","onConnect","authenticate","sync","force","console","log","swaggerJSDoc","swaggerUi","Documentation","app","swaggerSpec","use","serve","setup","asyncHandler","controller","req","res","next","error","toString","sendStatus","send","socketHandler","msg","express","withSockets","Middlewares","io","urlencoded","extended","json","getHeader","headers","status","userId","GenericModel","Model","create","data","get","conditions","findAll","where","getById","findOne","raw","updateById","update","deleteById","destroy","deleteByConditions","findOrCreate","condition","newObj","defaults","Cloudinary","v2","uploader","uploadStream","fileBuffer","options","upload_stream","result","end","removeFile","public_id","Controller","restrictedAccess","router","Router","post","login","body","isTeacher","auth0","domain","AUTH0_DOMAIN","clientId","AUTH0_CLIENT_ID","clientSecret","AUTH0_SECRET","audience","AUTH0_AUDIENCE","getManagementApi","ManagementClient","getAuthenticationApi","AuthenticationClient","verifyAuthToken","Service","signIn","Schema","require","define","auth0Id","STRING","teacherId","cod","student","BOOLEAN","StudentModel","TeacherModel","AuthService","providerToken","email_verified","given_name","picture","email","rqr","verified","deleteUser","userProviderId","updateHasTerminated","hasTerminated","ClassroomStudent","INTEGER","primaryKey","autoIncrement","allowNull","defaultValue","isInClassroom","hasDoubts","doIt","doubtTime","classroom","belongsTo","foreignKey","createIfNotExistsAndGetClassroom","query","getClassroomWithStudents","txt","updateTxt","emit","newExercise","updatedClassroom","StartSocketServer","socket","on","getMostRecentCod","classroomId","dataValues","Student","include","order","Classroom","classroomstudent","belongsToMany","through","onDelete","studentRoutes","studentSockets","teacherRoutes","classRoomRoutes","classRoomSockets","authRoutes","Routes","socketIO","Sockets","multer","path","mail","getStudentClassroomAndSuscribeToItIfIsNotSuscribed","studentId","removeStudentFromClassroom","studentHasTerminated","studentHasDoubts","studentIsInClassroom","studentIsBlocked","storage2","diskStorage","destination","filename","file","cb","imageName","extname","originalname","storage","memoryStorage","upload","single","buffer","folder","insertImageIntoDatabase","secure_url","monteserinAvatarPicture","setMonteserinAvatar","avatarType","setAvatarType","studentName","saveStudentName","ClassroomController","ClassroomModel","ClassroomStudentModel","time","Date","getTime","isBlocked","uploadedPicture","unique","SMALLINT","teacherData","length","lastCod","http","ConnectDatabase","port","PORT","server","createServer","listen"],"sourceRoot":""}