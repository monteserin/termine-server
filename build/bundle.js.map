{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://server/./src/application/common/utils/access.js","webpack://server/./src/application/common/utils/secret.js","webpack://server/./src/application/config/sockets.js","webpack://server/./src/application/config/swagger.js","webpack://server/./src/application/database/index.js","webpack://server/./src/application/documentation/index.js","webpack://server/./src/application/middlewares/error-handler.js","webpack://server/./src/application/middlewares/index.js","webpack://server/./src/application/middlewares/restricted-access.js","webpack://server/./src/application/middlewares/with-sockets.js","webpack://server/./src/application/repository/generic-model.js","webpack://server/./src/entities/auth/adapters/http/index.js","webpack://server/./src/entities/auth/auth0/api.js","webpack://server/./src/entities/auth/auth0/index.js","webpack://server/./src/entities/auth/auth0/secret.js","webpack://server/./src/entities/auth/controller/index.js","webpack://server/./src/entities/auth/model/index.js","webpack://server/./src/entities/auth/model/schema.js","webpack://server/./src/entities/auth/service/index.js","webpack://server/./src/entities/classroom-student/model/index.js","webpack://server/./src/entities/classroom-student/model/schema.js","webpack://server/./src/entities/classroom/adapters/http/index.js","webpack://server/./src/entities/classroom/adapters/socket/index.js","webpack://server/./src/entities/classroom/controller/index.js","webpack://server/./src/entities/classroom/model/index.js","webpack://server/./src/entities/classroom/model/schema.js","webpack://server/./src/entities/index.js","webpack://server/./src/entities/student/adapters/http/index.js","webpack://server/./src/entities/student/adapters/socket/index.js","webpack://server/./src/entities/student/controller/index.js","webpack://server/./src/entities/student/model/index.js","webpack://server/./src/entities/student/model/schema.js","webpack://server/./src/entities/teacher/adapters/http/index.js","webpack://server/./src/entities/teacher/controller/index.js","webpack://server/./src/entities/teacher/model/index.js","webpack://server/./src/entities/teacher/model/schema.js","webpack://server/external commonjs \"@babel/runtime/helpers/asyncToGenerator\"","webpack://server/external commonjs \"@babel/runtime/helpers/defineProperty\"","webpack://server/external commonjs \"@babel/runtime/helpers/slicedToArray\"","webpack://server/external commonjs \"@babel/runtime/regenerator\"","webpack://server/external commonjs \"auth0\"","webpack://server/external commonjs \"cors\"","webpack://server/external commonjs \"express\"","webpack://server/external commonjs \"jsonwebtoken\"","webpack://server/external commonjs \"jwks-rsa\"","webpack://server/external commonjs \"multer\"","webpack://server/external commonjs \"sequelize\"","webpack://server/external commonjs \"socket.io\"","webpack://server/external commonjs \"swagger-jsdoc\"","webpack://server/external commonjs \"swagger-ui-express\"","webpack://server/external node-commonjs \"http\"","webpack://server/external node-commonjs \"path\"","webpack://server/webpack/bootstrap","webpack://server/webpack/runtime/compat get default export","webpack://server/webpack/runtime/define property getters","webpack://server/webpack/runtime/hasOwnProperty shorthand","webpack://server/webpack/runtime/make namespace object","webpack://server/./src/index.js"],"sourcesContent":["import jwt from 'jsonwebtoken';\nimport { getKey } from './secret';\n\nexport const verifyToken = token => new Promise(((resolve, reject) => {\n    jwt.verify(token, getKey, (err, decoded) => err || !decoded\n        ? reject(err)\n        : resolve({ ...decoded, id: decoded.sub || decoded.id }));\n}));\n\n","import jwksClient from 'jwks-rsa';\r\n\r\nconst { JWKS_URI } = process.env;\r\n\r\nconst client = jwksClient({ jwksUri: String(JWKS_URI) });\r\n\r\nexport const getKey = (header, callback) => {\r\n    client.getSigningKey(header.kid, (err, key) => {\r\n        if (err) return callback(err);\r\n        const signingKey = key.getPublicKey();\r\n        callback(err, signingKey);\r\n    });\r\n};\r\n","\r\nexport const config = {\r\n    cors: {\r\n        origin: \"*\",\r\n        methods: [\"GET\", \"POST\"],\r\n        credentials: true\r\n    },\r\n    allowEIO3: true\r\n};","export const swaggerConfig = {\n  definition: {\n    openapi: '3.0.0',\n    info: {\n      title: 'Test API',\n      version: '1.0.0',\n    },\n    components: {\n      securitySchemes: {\n        ApiKeyAuth: {\n          type: 'apiKey',\n          name: 'x-access-token',\n          in: 'header',\n        },\n      },\n    },\n    security: [\n      { ApiKeyAuth: [] },\n    ],\n    securityDefinitions: {\n      basicAuth: {\n        type: 'basic'\n      },\n    },\n  },\n  // Path to the API docs\n  apis: ['./src/entities/**/*.js', './src/entities/**/*.yml'],\n};\n\n","import { Sequelize, DataTypes } from 'sequelize';\r\n\r\nconst database = process.env.DB_NAME;\r\nconst user = process.env.DB_USER;\r\nconst password = process.env.DB_PASSWORD;\r\nconst host = process.env.DB_HOST;\r\nconst forceCleanDatabase = process.env.DB_FORCE_CLEAN === 'true';\r\n\r\nexport const db = new Sequelize(database, user, password, {\r\n\thost,\r\n\tdialect: 'mysql',\r\n\tlogging: false,\r\n});\r\n\r\nexport {DataTypes};\r\nexport const setAssociations = (db) => {\r\n\tObject.keys(db.models).forEach((modelName) => {\r\n\t\tif ('associate' in db.models[modelName]) {\r\n\t\t\tdb.models[modelName].associate(db.models);\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport default async (onConnect) => {\r\n\ttry {\r\n\t\tawait setAssociations(db);\r\n\t\tawait db.authenticate();\r\n\t\tawait db.sync({ force: forceCleanDatabase });\r\n\t\tonConnect();\r\n\t\tconsole.log('Database connection OK!');\r\n\t} catch (error) {\r\n\t\tconsole.log(error)\r\n\t\tconsole.log('Unable to connect to the database:');\r\n\t}\r\n}","import swaggerJSDoc from \"swagger-jsdoc\";\nimport swaggerUi from \"swagger-ui-express\";\nimport { swaggerConfig } from \"../config/swagger\";\n\nconst Documentation = (app) => {\n  // JSON of specs\n  const swaggerSpec = swaggerJSDoc(swaggerConfig);\n\n  // Api entrypoint\n  app.use(\"/docs\", swaggerUi.serve, swaggerUi.setup(swaggerSpec));\n};\n\nexport default Documentation;\n","/*Tenemos una función que recibe como parámetro la función de cada controlador,\nla ejecuta (resolve)\ny si  hay algún error, lo mostrará por consola y lanzará un 500\n*/\n\nexport const asyncHandler = controller => (req, res, next) => Promise\n  .resolve(controller(req, res, next))\n  .catch((err) => {\n    console.error('Request error:' + err.toString());\n    if (err) return res.sendStatus(500).send();\n});\n \nexport const socketHandler = controller => msg => Promise\n  .resolve(controller(msg))\n  .catch((err) => {\n    console.error('Socket error:' + err);\n});","import express from 'express';\nimport cors from 'cors';\nimport withSockets from './with-sockets';\n\nconst Middlewares = (app, io) => {\n    app.use(express.urlencoded({extended: true}));\n    app.use(express.json());\n    app.use(withSockets(io));\n    app.use(cors());\n};\n\nexport default Middlewares;","import { verifyToken } from '@Application/common/utils/access';\nexport const getHeader = (req, header) => req.headers[header];\n\nexport default async (req, res, next) => {\n  const token = getHeader(req, 'authorization');\n\n  if (!token) {\n    return res.status(400).send('No token provided.');\n  }\n  try {\n    const { id } = await verifyToken(token);\n    if (!id) {\n      return res.status(403).send('Wrong credentials');\n    }\n    req.userId = id;\n    return next();\n  } catch (err) {\n    return res.status(401).send('Failed to authenticate token.');\n  }\n}","const withSockets = io => (req, res, next) => {\r\n    req.io = io;\r\n    return next();\r\n};\r\n\r\nexport default withSockets;\r\n","const GenericModel = Model => ({\r\n    create(data) {\r\n        return Model.create(data);\r\n    },\r\n    get(conditions) {\r\n        return Model.findAll(conditions ? {where:conditions } : {});\r\n    },\r\n    getById(id) {\r\n        return Model.findOne({ where: { id } });\r\n    },\r\n    updateById(id, data) {\r\n        return Model.update(data, { where: { id } });\r\n    },\r\n    update(conditions, data) {\r\n        return Model.update(data, { where: conditions });\r\n    },\r\n    deleteById(id) {\r\n        return Model.destroy({ where: { id } });\r\n    },\r\n    findOrCreate(condition, newObj){\r\n        return Model.findOrCreate({where:condition, defaults: newObj});\r\n    }\r\n\r\n});\r\n\r\nexport default GenericModel;\r\n","import express from 'express';\r\nimport Controller from \"../../controller\";\r\nimport {asyncHandler} from \"@Middlwares/error-handler\";\r\n// Para operaciones con acceso restringido, introduciremos un segundo parámetro que será la variable restrictedAccess\r\nimport restrictedAccess from \"@Middlwares/restricted-access\";\r\n\r\nconst router = express.Router();\r\n\r\n// GET ALL\r\nrouter.post('/login', asyncHandler(async (req, res) => {\r\n\r\n    const data = await Controller.login(req.body.token, req.body.isTeacher);\r\n    res.send(data);\r\n}));\r\n\r\n\r\nexport default app => app.use('/auth', router);","import auth0 from 'auth0';\r\n\r\nconst config = {\r\n    domain: process.env.AUTH0_DOMAIN,\r\n    clientId: process.env.AUTH0_CLIENT_ID,\r\n    clientSecret: process.env.AUTH0_SECRET,\r\n    audience: process.env.AUTH0_AUDIENCE,\r\n};\r\n\r\nexport const getManagementApi = () => new auth0.ManagementClient(config);\r\n\r\nexport const getAuthenticationApi = () => new auth0.AuthenticationClient(config);","import jwt from 'jsonwebtoken';\r\nimport { getKey } from './secret';\r\nimport { getManagementApi, getAuthenticationApi } from './api';\r\n\r\nexport const verifyAuthToken = token => new Promise(((resolve, reject) => {\r\n    jwt.verify(token, getKey, (err, decoded) => err || !decoded\r\n        ? reject(err)\r\n        : resolve({ ...decoded, id: decoded.sub || decoded.id }));\r\n}));\r\n\r\nexport const ManagementClient = getManagementApi();\r\nexport const AuthenticationClient = getAuthenticationApi();","import jwksClient from 'jwks-rsa';\r\n\r\nconst { JWKS_URI } = process.env;\r\n\r\nconst client = jwksClient({ jwksUri: String(JWKS_URI) });\r\n\r\nexport const getKey = (header, callback) => {\r\n    client.getSigningKey(header.kid, (err, key) => {\r\n        if (err) return callback(err);\r\n        const signingKey = key.getPublicKey();\r\n        callback(err, signingKey);\r\n    });\r\n};\r\n","import Model from \"../model\";\nimport Service from '../service';\n\nconst Controller = {\n    login(token, isTeacher) {\n        return Service().signIn(token, isTeacher);\n    }\n}\n\nexport default Controller;\n","import Schema from './schema';\nimport GenericModel from '@Application/repository/generic-model';\n\nconst Model = {\n    ...GenericModel(Schema),\n    isUserInClassroom : (auth0Id, teacherId, cod, isStudent) => Schema.findOne({\n        where: {\n            auth0Id,\n            teacherId,\n            cod,\n            student: isStudent\n        }\n    })\n};\n\n\nexport default Model;\n","import { db } from '@Application/database';\r\nconst { DataTypes } = require('sequelize');\r\n\r\nexport default db.define('user', {\r\n\tauth0Id: DataTypes.STRING,\r\n\tteacherId: DataTypes.STRING,\r\n\tcod: DataTypes.STRING,\r\n\tstudent: DataTypes.BOOLEAN\r\n});\r\n\r\n","import { ManagementClient, verifyAuthToken } from '../auth0';\r\nimport StudentModel from '../../student/model';\r\nimport TeacherModel from '../../teacher/model';\r\n\r\n\r\nconst AuthService = () => ({\r\n    async signIn(providerToken, isTeacher) {\r\n        const { id, email_verified, given_name, picture } = await verifyAuthToken(providerToken);\r\n\r\n        const Model = isTeacher ? TeacherModel : StudentModel\r\n\r\n        const user = await Model.findOrCreate({auth0Id:id}, {auth0Id: id, name: given_name, picture});\r\n\r\n        return { user, verified: email_verified };\r\n    },\r\n    deleteUser(userProviderId) {\r\n        return ManagementClient.deleteUser({ id: userProviderId });\r\n    },\r\n});\r\n\r\nexport default AuthService;","import Schema from './schema';\nimport GenericModel from '@Application/repository/generic-model';\n\nconst Model = {\n    ...GenericModel(Schema),\n    updateHasTerminated(conditions, hasTerminated){\n        return Schema.update({hasTerminated},{where:conditions});\n    }\n};\n\nexport default Model;\n\n","import {db, DataTypes} from '@Application/database';\r\n\r\nconst ClassroomStudent = db.define('classroomstudent', {\r\n    id: {\r\n        type: DataTypes.INTEGER,\r\n        primaryKey: true,\r\n        autoIncrement: true,\r\n        allowNull: false,\r\n    },\r\n    hasTerminated: {\r\n        type: DataTypes.BOOLEAN,\r\n        defaultValue: false\r\n    },\r\n    isInClassroom: {\r\n        type: DataTypes.BOOLEAN,\r\n        defaultValue: true\r\n    },\r\n    hasDoubts: {\r\n        type: DataTypes.BOOLEAN,\r\n        defaultValue: false\r\n    },\r\n    doIt: {\r\n      type: DataTypes.BOOLEAN,\r\n      defaultValue: false\r\n    },\r\n    doubtTime: DataTypes.TIME\r\n\r\n});\r\n\r\nClassroomStudent.associate = ({classroom, student}) => {\r\n    ClassroomStudent.belongsTo(classroom, { foreignKey: { allowNull: false } });\r\n    ClassroomStudent.belongsTo(student, { foreignKey: { allowNull: false } });\r\n};\r\n\r\nexport default ClassroomStudent;","import express from 'express';\r\nimport Controller from '../../controller';\r\nimport {asyncHandler} from \"@Middlwares/error-handler\";\r\n// Para operaciones con acceso restringido, introduciremos un segundo parámetro que será la variable restrictedAccess\r\nimport restrictedAccess from \"@Middlwares/restricted-access\";\r\n\r\nconst router = express.Router();\r\n/*\r\n// GET BY ID\r\nrouter.get('/:id', asyncHandler(async (req, res) => {\r\n    const {query: {id}} = req;\r\n    const data = await Controller.getById(id);\r\n    res.send(data);\r\n}));\r\n\r\n// GET BY CONDITIONS\r\nrouter.get('/:teacherId/:cod', asyncHandler(async (req, res) => {\r\n    const {params: {teacherId, cod}} = req;\r\n    const data = await Controller.get({teacherId, cod});\r\n    res.send(data);\r\n}));\r\n*/\r\n// CREATE\r\nrouter.post(\"/\", asyncHandler(async (req, res) => {\r\n    const {body: {teacherId, cod}} = req;\r\n    const data = await Controller.createIfNotExistsAndGetClassroom(teacherId, cod);\r\n    res.send(data);\r\n}));\r\n\r\nrouter.get(\"/getClassroom\", asyncHandler(async (req, res) => {\r\n    const {query: {cod, teacherId}} = req;\r\n    const classroom = await Controller.getClassroomWithStudents(cod, teacherId);\r\n    res.send(classroom);\r\n}));\r\n\r\nrouter.post(\"/updateTxt\", asyncHandler(async (req, res) => {\r\n    const {body: {cod, teacherId, txt}} = req;\r\n    const classroom = await Controller.updateTxt(cod, teacherId,txt);\r\n    req.io.emit('classroomUpdated', classroom);\r\n}));\r\n\r\nrouter.post(\"/newExercise\", asyncHandler(async (req, res) => {\r\n    const {body: {cod, teacherId}} = req;\r\n    const updatedClassroom = await Controller.newExercise(cod, teacherId);\r\n    req.io.emit('classroomUpdated', updatedClassroom);\r\n\r\n   // await Controller.\r\n//    const classroom = await Controller.newExercise(cod, teacherId);\r\n //   req.io.emit('newExercise', classroom);\r\n}));\r\n\r\n\r\nexport default app => app.use('/classroom', router);","import {socketHandler} from '@Middlwares/error-handler';\r\nimport Controller from '../../controller';\r\n\r\nconst StartSocketServer = (io, socket) => {\r\n    socket.on('studentSuscribeOrLogInClassroom', socketHandler(async (msg) => {\r\n        io.emit('studentSuscribeOrLogInClassroom', msg);\r\n    }));\r\n};\r\n\r\nexport default StartSocketServer;\r\n","import Model from \"../model\";\nimport ClassroomStudent from \"../../classroom-student/model\";\n\nconst Controller = {\n    get(conditions) {\n        return Model.get(conditions);\n    },\n    getById(id) {\n        return Model.getById(id);\n    },\n    create(data) {\n        return Model.create(data);\n    },\n    updateById(id, data) {\n        return Model.updateById(id, data);\n    },\n    deleteById(id) {\n        return Model.deleteById(id);\n    },\n    async getClassroomWithStudents(cod, teacherId) {\n        const classroom = await Model.getClassroomWithStudents({cod, teacherId});\n        return classroom;\n    },\n    async createIfNotExistsAndGetClassroom(teacherId, cod) {\n        let data = await this.getClassroomWithStudents(teacherId, cod);\n        if (!data) {\n            await Model.create({teacherId, cod});\n            return await this.getClassroomWithStudents(teacherId, cod);\n        }\n        return data;\n    },\n    async updateTxt(cod, teacherId, txt) {\n        const [classroom] = await Model.get({cod, teacherId});\n        await Model.updateById( classroom.id, {txt});\n        return await Model.getClassroomWithStudents({cod, teacherId});\n    },\n    async newExercise(cod, teacherId) {\n        const [classroom] = await Model.get({cod, teacherId});\n        await ClassroomStudent.update({classroomId:classroom.dataValues.id},{hasTerminated:false});\n        return await Model.getClassroomWithStudents({cod, teacherId});\n    },\n}\n\nexport default Controller;\n","import Schema from './schema';\nimport GenericModel from '@Application/repository/generic-model';\nimport Student from '../../student/model/schema';\nimport ClassroomStudent from \"../../classroom-student/model/schema\";\n\nconst Model = {\n    ...GenericModel(Schema),\n    getClassroomWithStudents(conditions){\n        return Schema.findOne({where:conditions,include: Student});\n    }\n};\n\nexport default Model;\n\n","import {db, DataTypes} from '@Application/database'\r\nimport ClassroomStudent from \"../../classroom-student/model/schema\";\r\n\r\nconst Classroom = db.define('classroom', {\r\n    teacherId: DataTypes.STRING,\r\n    cod: DataTypes.STRING,\r\n    txt: {\r\n        type:DataTypes.STRING,\r\n        defaultValue:''\r\n    }\r\n});\r\n\r\nClassroom.associate = ({student, classroomstudent}) => {\r\n    Classroom.belongsToMany(student, {through: ClassroomStudent, onDelete: 'cascade'});\r\n    // Classroom.hasMany(classroomstudent, { onDelete: 'cascade'});\r\n};\r\n\r\n\r\nexport default Classroom;","import studentRoutes from './student/adapters/http';\nimport studentSockets from './student/adapters/socket';\nimport teacherRoutes from './teacher/adapters/http';\n//import teacherSockets from './teacher/adapters/socket';\nimport classRoomRoutes from './classroom/adapters/http';\nimport classRoomSockets from './classroom/adapters/socket';\nimport authRoutes from './auth/adapters/http';\n\nexport const Routes = (app,socketIO) => {\n    studentRoutes(app,socketIO);\n    teacherRoutes(app);\n    classRoomRoutes(app);\n    authRoutes(app);\n}\n\nexport const Sockets = (io, socket) => {\n    studentSockets(io, socket);\n    //teacherSockets(io, socket);\n  //  classRoomSockets(io, socket);\n}","import express from 'express';\r\nimport Controller from \"../../controller\";\r\nimport {asyncHandler} from \"@Middlwares/error-handler\";\r\nimport multer from \"multer\";\r\nimport path from \"path\";\r\n\r\n// Para operaciones con acceso restringido, introduciremos un segundo parámetro que será la variable restrictedAccess\r\nimport restrictedAccess from \"@Middlwares/restricted-access\";\r\n\r\n\r\nconst router = express.Router();\r\n\r\nrouter.post(\"/\", asyncHandler(async (req, res) => {\r\n    const {body: {teacherId, auth0Id, cod, picture, name}} = req;\r\n    const data = await Controller.getStudentClassroomAndSuscribeToItIfIsNotSuscribed({\r\n        teacherId,\r\n        auth0Id,\r\n        cod,\r\n        picture,\r\n        name\r\n    })\r\n    res.send(data);\r\n}));\r\nrouter.post(\"/hasTerminated\", asyncHandler(async (req, res) => {\r\n    const updatedClassroom  = await Controller.studentHasTerminated(req.body);\r\n    req.io.emit('classroomUpdated', updatedClassroom);\r\n}));\r\n\r\nrouter.post(\"/hasDoubts\", asyncHandler(async (req, res) => {\r\n    const updatedClassroom  = await Controller.studentHasDoubts(req.body);\r\n    req.io.emit('classroomUpdated', updatedClassroom);\r\n}));\r\n\r\nrouter.post(\"/isInClassroom\", asyncHandler(async (req, res) => {\r\n    const updatedClassroom  = await Controller.studentIsInClassroom(req.body);\r\n    req.io.emit('classroomUpdated', updatedClassroom);\r\n}));\r\n\r\nrouter.post(\"/doit\", asyncHandler(async (req, res) => {\r\n    const updatedClassroom  = await Controller.doIt(req.body);\r\n    req.io.emit('classroomUpdated', updatedClassroom);\r\n}));\r\n\r\nrouter.post('/uploadavatar', restrictedAccess, asyncHandler(async (req, res) => {\r\n    console.log(\"Request ---\", req.body);\r\n\r\n    upload(req, res, (err) => {\r\n        console.log(\"Request ---\", req.body);\r\n        console.log(\"Request file ---\", req.file);//Here you get file.\r\n        /*Now do where ever you want to do*/\r\n        if(!err && req.file){\r\n            //req.userId\r\n            Controller.insertImageIntoDatabase(req.body.studentId, req.file.filename);\r\n            return res.send(200).end();\r\n\r\n        }\r\n        else{\r\n            console.log('22222222222222')\r\n            return res.send(400).end();\r\n        }\r\n    });\r\n\r\n}));\r\n\r\nconst storage = multer.diskStorage({\r\n    destination: \"./public/uploads/\",\r\n    filename: function(req, file, cb){\r\n        const imageName = \"image-\" + req.userId + path.extname(file.originalname);\r\n        cb(null, imageName);\r\n    }\r\n});\r\n const upload = multer({\r\n    storage: storage,\r\n    limits:{fileSize: 1000000},\r\n}).single(\"myImage\");\r\n\r\n\r\nexport default app => app.use('/student', router);","import {socketHandler} from '@Middlwares/error-handler';\r\nimport Controller from '../../controller';\r\nimport ClassroomController from '../../../classroom/controller';\r\n\r\nconst StartSocketServer = (io, socket) => {\r\n    socket.on('studentSuscribeOrLogInClassroom', socketHandler(async (msg) => {\r\n        const classroom = await Controller.getStudentClassroomAndSuscribeToItIfIsNotSuscribed(msg);\r\n        io.emit('classroomStudents', classroom);\r\n    }));\r\n\r\n\r\n    socket.on('studentHasDoubts', socketHandler(async (msg) => {\r\n        const updatedClassroom  =await Controller.studentHasDoubts(msg);\r\n        io.emit('studentHasTerminated', updatedClassroom);\r\n    }));\r\n\r\n    socket.on('emitStudentsUpdated',socketHandler(async (msg) => {\r\n        const updatedClassroom = await ClassroomController.getClassroomWithStudents(msg.cod, msg.teacherId);\r\n        io.emit('studentsUpdated', updatedClassroom);\r\n    }))\r\n};\r\n\r\nexport default StartSocketServer;\r\n","import Model from \"../model\";\nimport ClassroomModel from '../../classroom/model';\nimport ClassroomStudentModel from '../../classroom-student/model';\nimport ClassroomController from \"../../classroom/controller\";\n\nconst Controller = {\n    get(conditions) {\n        return Model.get(conditions);\n    },\n    getById(id) {\n        return Model.getById(id);\n    },\n    create(data) {\n        return Model.create(data);\n    },\n    updateById(id, data) {\n        return Model.updateById(id, data);\n    },\n    deleteById(id) {\n        return Model.deleteById(id);\n    },\n    async studentHasTerminated(msg) {\n        const [classroom] = await ClassroomModel.get({teacherId: msg.teacherId, cod: msg.cod});\n        const conditions = {classroomId: classroom.dataValues.id, studentId: msg.studentId};\n        const data = {hasTerminated: msg.hasTerminated};\n        await ClassroomStudentModel.update(conditions, data);\n        return await ClassroomController.getClassroomWithStudents(msg.cod, msg.teacherId);\n\n    },\n    async studentHasDoubts(msg) {\n        const [classroom] = await ClassroomModel.get({teacherId: msg.teacherId, cod: msg.cod});\n        const conditions = {classroomId: classroom.dataValues.id, studentId: msg.studentId};\n        const data = {hasDoubts: msg.hasDoubts};\n        await ClassroomStudentModel.update(conditions, data);\n        return await ClassroomController.getClassroomWithStudents(msg.cod, msg.teacherId);\n    },\n\n    async studentIsInClassroom(msg) {\n        const [classroom] = await ClassroomModel.get({teacherId: msg.teacherId, cod: msg.cod});\n        const conditions = {classroomId: classroom.dataValues.id, studentId: msg.studentId};\n        const data = {isInClassroom: msg.isInClassroom};\n        await ClassroomStudentModel.update(conditions, data);\n        return await ClassroomController.getClassroomWithStudents(msg.cod, msg.teacherId);\n    },\n\n    async getStudentClassroomAndSuscribeToItIfIsNotSuscribed(msg) {\n        const [classroom] = await ClassroomModel.get({teacherId: msg.teacherId, cod: msg.cod});\n        if (classroom) {\n\n            const [student] = await Model.findOrCreate({auth0Id: msg.auth0Id}, {\n                auth0Id: msg.auth0Id,\n                picture: msg.picture,\n                name: msg.name\n            });\n            ClassroomStudentModel.create({studentId: student.id, classroomId: classroom.id});\n            return classroom;\n        } else {\n            return null;\n        }\n    },\n\n    async doIt(data) {\n        const [classroom] = await ClassroomModel.get({cod: data.cod, teacherId: data.teacherId});\n        await ClassroomStudentModel.update({classroomId: classroom.id}, {doIt: data.doIt});\n        return await ClassroomController.getClassroomWithStudents(data.cod, data.teacherId);\n    },\n    async insertImageIntoDatabase(id, imageName){\n        await Model.updateById(id, {uploadedPicture:imageName})\n    }\n\n}\n\nexport default Controller;\n","import Schema from './schema';\nimport GenericModel from '@Application/repository/generic-model';\n\nconst Model = {\n    ...GenericModel(Schema),\n    isUserInClassroom: (auth0Id, teacherId, cod) => Schema.findOne({\n        where: {\n            auth0Id,\n            teacherId,\n            cod\n        }\n    })\n};\n\n\nexport default Model;\n","import {db, DataTypes} from '@Application/database';\r\nimport ClassroomStudent from \"../../classroom-student/model/schema\";\r\n\r\nconst Student = db.define('student', {\r\n    auth0Id: {\r\n        type: DataTypes.STRING,\r\n        unique: true\r\n    },\r\n    picture: DataTypes.STRING,\r\n    uploadedPicture: DataTypes.STRING,\r\n    avatarType: DataTypes.SMALLINT,\r\n    name: DataTypes.STRING,\r\n});\r\n\r\nStudent.associate = ({classroom}) => {\r\n    Student.belongsToMany(classroom, {through: ClassroomStudent, onDelete: 'cascade'});\r\n};\r\n\r\nexport default Student;","import express from 'express';\r\nimport Controller from \"../../controller\";\r\nimport {asyncHandler} from \"@Middlwares/error-handler\";\r\n// Para operaciones con acceso restringido, introduciremos un segundo parámetro que será la variable restrictedAccess\r\nimport restrictedAccess from \"@Middlwares/restricted-access\";\r\n\r\nconst router = express.Router();\r\n\r\n\r\nrouter.post(\"/\", asyncHandler(async (req, res) => {\r\n    const {body: { auth0Id, id}} = req;\r\n\r\n    const teacherData = await Controller.getById(id);\r\n    if (!teacherData) {\r\n        await Controller.create({auth0Id});\r\n        res.send({status:'teacher created'});\r\n    } else {\r\n        if (teacherData.auth0Id !== auth0Id) {\r\n            res.send({status:'Another teacher has this teacherId'});\r\n        } else {\r\n            res.send({status:'This teacherId is already yours'});\r\n        }\r\n    }\r\n}));\r\n\r\nexport default app => app.use('/teacher', router);","import Model from \"../model\";\n\nconst Controller = {\n    get(conditions) {\n        return Model.get(conditions);\n    },\n    getById(id) {\n        return Model.getById(id);\n    },\n    create(data) {\n        return Model.create(data);\n    },\n    updateById(id, data) {\n        return Model.updateById(id, data);\n    },\n    deleteById(id) {\n        return Model.deleteById(id);\n    },\n\n}\n\nexport default Controller;\n","import Schema from './schema';\nimport GenericModel from '@Application/repository/generic-model';\n\nconst Model = {\n    ...GenericModel(Schema),\n\n    isUserInClassroom: (auth0Id, teacherId, cod, isStudent) => Schema.findOne({\n        where: {\n            auth0Id,\n            teacherId,\n            cod\n        }\n    })\n};\n\n\nexport default Model;\n","import {db} from '@Application/database';\r\n\r\nconst {DataTypes} = require('sequelize');\r\n\r\nexport default db.define('teacher', {\r\n    auth0Id: DataTypes.STRING,\r\n    teacherId: DataTypes.STRING,\r\n});\r\n\r\n","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"auth0\");","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"jwks-rsa\");","module.exports = require(\"multer\");","module.exports = require(\"sequelize\");","module.exports = require(\"socket.io\");","module.exports = require(\"swagger-jsdoc\");","module.exports = require(\"swagger-ui-express\");","module.exports = require(\"http\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import express from 'express';\nimport http from 'http';\nimport socketIO from 'socket.io';\nimport { config } from '@Application/config/sockets';\nimport Middlewares from './application/middlewares';\nimport { Routes, Sockets } from './entities';\nimport Documentation from './application/documentation';\nimport ConnectDatabase from './application/database';\n\nconst app = express();\n\n/*\nHeroku utiliza la variable de entorno process.env.port para asignar el puerto donde se va ejecutar el servidor,\npor eso la hemos definido en esta plantilla\n*/\nconst port = process.env.PORT;\nconst server = http.createServer(app);\nconst io = socketIO(server, config);\n\nDocumentation(app);\nMiddlewares(app, io);\nRoutes(app,socketIO);\n\n\nConnectDatabase(() => {\n    server.listen(port, () => console.log(`Server listening to http://localhost:${port}`));\n});\n\nio.on('connection', (socket) => {\n    Sockets(io, socket);\n});"],"names":["jwt","getKey","verifyToken","token","Promise","resolve","reject","verify","err","decoded","id","sub","jwksClient","JWKS_URI","process","env","client","jwksUri","String","header","callback","getSigningKey","kid","key","signingKey","getPublicKey","config","cors","origin","methods","credentials","allowEIO3","swaggerConfig","definition","openapi","info","title","version","components","securitySchemes","ApiKeyAuth","type","name","security","securityDefinitions","basicAuth","apis","Sequelize","DataTypes","database","DB_NAME","user","DB_USER","password","DB_PASSWORD","host","DB_HOST","forceCleanDatabase","DB_FORCE_CLEAN","db","dialect","logging","setAssociations","Object","keys","models","forEach","modelName","associate","onConnect","authenticate","sync","force","console","log","swaggerJSDoc","swaggerUi","Documentation","app","swaggerSpec","use","serve","setup","asyncHandler","controller","req","res","next","error","toString","sendStatus","send","socketHandler","msg","express","withSockets","Middlewares","io","urlencoded","extended","json","getHeader","headers","status","userId","GenericModel","Model","create","data","get","conditions","findAll","where","getById","findOne","updateById","update","deleteById","destroy","findOrCreate","condition","newObj","defaults","Controller","restrictedAccess","router","Router","post","login","body","isTeacher","auth0","domain","AUTH0_DOMAIN","clientId","AUTH0_CLIENT_ID","clientSecret","AUTH0_SECRET","audience","AUTH0_AUDIENCE","getManagementApi","ManagementClient","getAuthenticationApi","AuthenticationClient","verifyAuthToken","Service","signIn","Schema","isUserInClassroom","auth0Id","teacherId","cod","isStudent","student","require","define","STRING","BOOLEAN","StudentModel","TeacherModel","AuthService","providerToken","email_verified","given_name","picture","verified","deleteUser","userProviderId","updateHasTerminated","hasTerminated","ClassroomStudent","INTEGER","primaryKey","autoIncrement","allowNull","defaultValue","isInClassroom","hasDoubts","doIt","doubtTime","TIME","classroom","belongsTo","foreignKey","createIfNotExistsAndGetClassroom","query","getClassroomWithStudents","txt","updateTxt","emit","newExercise","updatedClassroom","StartSocketServer","socket","on","classroomId","dataValues","Student","include","Classroom","classroomstudent","belongsToMany","through","onDelete","studentRoutes","studentSockets","teacherRoutes","classRoomRoutes","classRoomSockets","authRoutes","Routes","socketIO","Sockets","multer","path","getStudentClassroomAndSuscribeToItIfIsNotSuscribed","studentHasTerminated","studentHasDoubts","studentIsInClassroom","upload","file","insertImageIntoDatabase","studentId","filename","end","storage","diskStorage","destination","cb","imageName","extname","originalname","limits","fileSize","single","ClassroomController","ClassroomModel","ClassroomStudentModel","uploadedPicture","unique","avatarType","SMALLINT","teacherData","http","ConnectDatabase","port","PORT","server","createServer","listen"],"sourceRoot":""}